(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    933265,      19515]
NotebookOptionsPosition[    926566,      19390]
NotebookOutlinePosition[    926914,      19405]
CellTagsIndexPosition[    926871,      19402]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["PR\[CapitalAAcute]CTICA  2", "Title",
 FontSize->36,
 FontVariations->{"Underline"->True},
 FontColor->RGBColor[1, 0, 0]]], "Input",
 CellChangeTimes->{{3.7287977856471186`*^9, 3.7287977958347034`*^9}, {
  3.728797832194252*^9, 3.728797857069454*^9}, {3.728798179217099*^9, 
  3.7287981903997927`*^9}, {3.73168150888757*^9, 
  3.7316815095809565`*^9}},ExpressionUUID->"9f2e2e60-3d99-4211-8b16-\
c8cc2e0b1ce4"],

Cell["AUTOR : \[CapitalAAcute]NGEL IGUALADA MORAGA", "Program",
 CellChangeTimes->{{3.7289746565663476`*^9, 3.728974682800871*^9}},
 FontSize->16,ExpressionUUID->"f812a491-4d34-42e8-a05a-a5c51c521ef2"],

Cell[CellGroupData[{

Cell["Ejercicio 1 ", "Section",
 CellChangeTimes->{{3.728798216686054*^9, 3.728798258343525*^9}, {
   3.728973175468689*^9, 3.7289732003086224`*^9}, 
   3.7289744389714975`*^9},ExpressionUUID->"2656c1e8-80aa-407f-aebf-\
29fb9a6a514a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ejercicio1", "[", "AFD_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vecindario", ",", "estados"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vecindario", " ", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"AFD", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"AFD", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"e1_", ",", "e2_", ",", "e2_"}], "}"}]}], "]"}], ",", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"AFD", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"e1_", ",", "e2_", ",", "e2_"}], "}"}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"estados", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{"AFD", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"AFD", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"estados", ",", "vecindario", ",", 
        RowBox[{"AFD", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7287983500541215`*^9, {3.728973382403392*^9, 3.7289733972473197`*^9}, 
   3.728974275205086*^9, {3.7316815746153536`*^9, 3.7316815849923887`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"0ec99ef2-a232-4bcf-adfe-263b57e5a570"],

Cell[CellGroupData[{

Cell["Comprobaciones", "Subsection",
 CellChangeTimes->{{3.728974590706682*^9, 
  3.7289745997067537`*^9}},ExpressionUUID->"f088d13f-c882-423a-a99a-\
f2cda7f98ba4"],

Cell[BoxData[{
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQdYE0vXx9XXLmDvXUEQFbHXq2IvqFhBULEiIl0FQRTsLXSp0kFAioCK
ICIgHRGQJor03os0r4rfd5JI7poEDKRMxOX53fuYyTJ79uzMf86ZmV2mHlPZ
LderR48eZ/vD/3Yf1RRTVz+qtWcIfNinfPb0KeWTJ7Yonzt56qT60mP/g0In
+E+zZ48exH9//vp/ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4
ODg4ODg4ODg4ODg4ODgc5XOW3iWXnVouUi55VciNwcHB6X7UpR6VIfBLEkT0
M8qRG4ODg9P9wEUGBweHreAig9N9KY8N3avlslP70c3Eb8iN+XvhGpGpx8Fh
NUUvH8+UhOZtLB/+FbkxfzitpTWNWRWNBZ9bO/27GJEpayusqm/uSlU4OFwG
LjLMUlfp6xN8Usd2yWF9fqInAf05cnZSxhEPPzTVMloJRmQaqn3cnkgoGAuS
qpot73TE8s3TAvzu4Pyp4CLDDCUf3h5TMGzTFhpkHiiE1NYwUlWbyMy5EXpN
x1SApioBWUet6HqGqmKSf3FwWMx/IvP6K3Jj/jBqsjUUDYgiIGW6xSDCJiL3
dUZZdFq+z4soNS1zIbI4yPk/rmGgqtqfIkNmtqKXrv/H4LTi0NjkWwR7USmy
zrgafvqO/qr/Bpr/LahoyKpoLmtGbUm3gJ7IfC+pai7F3fsbWtP93GcTXWew
yb6giOrbpqr7uiYk/bE4G/ft97VhREZEM+xl5Q/Mt18iPdzIOjPvVsqnFuQX
3m0pys40sfbdrWI++0Cb4B8wXqr2SOlhWvQvdwSnk47FiExZXuYdfZeV5LmF
A0bLNLw1HmelfUZvJFfS4mNhv/SIwQxZb4dy2hb4I8vfgxTMGMoGtfy+NorI
yDjfzaQJV5qrDLRISdlBt/sFragvvFvyb7Sfz0qZdtJeScJMxaeuhbjnuwhF
ZA45vN5zlI57555/6VOMu7c9Wstq/62i91XZaz8RUpwj/byx9rf1tInMTN23
H+jEKq3vfd1IkmV0JKgJ9SV3QwrjglZLk3LSo46nHyZ5JxRFfyiNSMp0cA+Q
OGlA7ghLjD9Sx6s4jNEmMmSMVt8ItY7Mj0gvfPoi4pS6CXkGcq5ObHwTelO5
ntayyto3yVlu/jF6po93yBuRXGpwwL+BYZHRX2tXSFeyKhNerpQiHeBQRPcA
nK7TUmuuS7pZ0va6775QfVuVEy8pS55eC/RvQG3qnwlGZIy3O+blYofR2hKD
y6SVDinTo0Gff99T/ka+fUhJvWvhK6lhA6kT7apQJ0XGQMKrqobeAdUfI7eQ
htqlZtmV6K+6e1GTqaFuISqtL3IzOYs2jGxpsL5CCmZkvB0ZmcPHoYEiMjM1
o97QhCvVOTESpDBe+HJ8Gj7lSEV9ua2B7RypX9eapU1XnnM/aRFpaesm3HmR
2enZjshkRGwmioz+CstcXGTYQsvXonq6i3dfPQjGpDjHw6YCn/7tCm0iYyj5
pJ5OX2ipM7tEkvFD3o6V6K3lIlqa/S1tyOvUQnIuCg5x9uE54Vn1hW1CXfbK
p/Mio7/Wnn42VBEXuJSoZgbibhXVyK+929PyNbewPDQ23dojVO2W8/JDBLLI
WNOZ4cf5PT9F5oDt5RS6Mv4tyMpqBukAvTR8k8Z/1JYkSZPa3gz5J250JsZb
U7wfCpFF5hnjIkOYfT05m97Eb7ybE7E2qfuKkfh2JvbQWB/6Mkrjrvs2JUid
6K0x4SLTVX6KjLSLYS7dJaTWOFdHIcb3e/w1VCaRZ2IJogYfymgPaKk20/05
8Us/RKSCsoQt+8iCdpG6Ll9bWZ+09uHrhseTbKD00zsFFWOqKTWho1abdX01
3BIuXTLERYYZKCJj0I7IxLg4kETGSiMBF5n/aJskIQiph0VQbSVqaQp+6Cr6
c67GYPfjGrrTLL+A2YwneinqdQ2mMTfVepjYkoOitTb5dAQNhzlqq7M1lMnr
1AZLtZ7qeSd7xhe9LW5py1u/ut7BRYYpKOmSbir9dMnfzIKo8NJOdz/hu2Uw
NBVfV//ZMpfphTyILozLrkrIKPAJjFTWsiBqgrQBWRk2Pyz7bxalIUv7nM0a
JZs1as/dsJtI20RmjqwxJKezlby0vVO8ojPd/SPOaJqRnpQkzFJ/FVCNN3KW
8+Ojvwdp57b+Mv10OpuUWqqNL5JutPQj6zLc/12hbeLX6FAgvT1jzeV3NIge
Fjj+7DG+9ZfKdSlRe4/r00neJfXnawTapyafOkJ6FkA/479NXJ/fyx2ml+C3
rS5td069c+n+DNoKtUKeluAizw6+vbQmzTpKmp6OoDPfVZMXv//nxK+7RTEu
Ml2BsoQtoveWdpG6JClYjPQcx7x76XmoTeVCKotyzKx8JFQsRA8aCEkbL5C3
23snyOB1eT54sqXeWs+IpM9+/wUtvxUZj6rqhponHgFS6pZQp/BR87UX/S77
F3zCN0Oyi7YJAUmDjY7FVNlobWX+zYttD8VLu5rgz3R0if8240mZ7nUrKsTo
TFVhhooKOVC01UnCFzVYxfdIJztBGS/7KuSW4BCpSg/fSF5OkraUskvyTSlL
zKmMfpdp7+YvIUds/0LS5F7gcOsDLjJd4afISBnPlYXI32jN9WDjoA++Ue+t
Hz7b/jMXMNpkk1OA78RjGc3Ot40F5YMCGpFbgkPmS5ib2wIp2rSXwH/gvrhZ
8usXfqKkUfj0a+qHDnAYoW11yflGcCSdGQap+zvtsj7iCsNCh6dGbD9ksNo6
D18n4ia+vY+Pv3DbZa2cySxpAyHZ+8vV3E5YxnhmNtdA0lSceIA0LbPwXnou
3hc6D0Vk9HNaKwo+GZg+2ihvOkvaUFTOdve9EOt3n/HH8VhJfb62suFSvehQ
fJ0IBweHLfwoKq0vwkdDHBwcHBwcHBw2UIeDg4ODg4ODg4ODg4ODg4ODg8Mp
SmqbXobHPHB8eFH3mpyC0snTioCi6tk7Bibuj58mpGUit/BPJ+l9loev/11D
UyW1c2T3gp+1Ll2xsnd+ERZVVN2A3MI/mrL6lleRcTZOrpeu3KA04DMq6rcI
Rm7eT+JTPiC38K8lMf3T5as3/1kt1rdvv3HjJyxfuUr60BHV8xfUNLQABWU1
8Z275oiIDhw4aOy48QcOyto6u8HdRG72n0JFw78Orp4HZY+NnzCxf/8Bs2aL
bNshcVpJlexeAL5auWrNhImTevfus2zFP9qXr75JzkBu9h9E8sdcvRt31qxd
369f/zFjx4EPpWQOUxowiMyOXXtE5s4bNIhn1Ogx+w8ctHZwKa1rRm7230Dt
lx8wqq7buBlavsSefSaWNqmf8js4vrLx6/NX4ee1LwnPmjNs+AjVc5odH4+T
kVt8Tktn5KjRM4RmqmtqPw0KBcHp4Pj07EKzB/a790kNGDBwtdg650ePa1pa
kV8FN/P42YvN27aDtsA4aGRm9S4ju4ODq5u/B72OhrgRBGfIkKEgPh0fj8Mk
YbEJi5Ysg7gFAsusoorO/jqojcSe/dAXoO9AkoX8crgNiPQu6OhB7AeN3y/w
VWd/Pbe0+srNu5MmTxGdtwASWOSXw4VEJ6au+Gc1RCbg54/5pZ39dfDqPikZ
aMCKqmcLqz4jv5xuBgSKx08pQPsHSWcy64lKSIHcCrIAT7/nyK+LewBVmTJ1
2sLFS0HJmakHwh7da7d4eHgPHTmOT9dg3QJBCEsGuPiUD2vWbRg9ZiwEjciv
q9uQllUwV3Q+DAGQxrKqTit7Z15ePh2968ivjhu4fkcfZMHY4gFkoyypEHKo
tRs2zRSejcf2AAQti5cuBwFn4TKEg6sHZE8gWXhyyjwQIo4YOUpOQamq6Rtr
a45JSpsybbrEnn0dzzl0b8CrUjKHJ0yc9DoukbU1Q+NXOasxZOiwZy/DkF8m
QsLfJI0dNx7iOpY3M5CsGUIzN20VxyeEmSHybTLItYGpBZvqzyurgSEGdObv
HA4gbgGFEZk7rwsTXAxiYesIEWNI1BvkF4sESG2Gjxh57TaBTfUXVn3+Z7XY
xi3bWD4E/yVApD1q9Bj23SAyoDPCs+YcOXEK+fVyHgVltekCM9inMGRgjBg2
fMRfuMANOSOEiBd09Nh6FtAZ0fkL9x84yKpU9++hrL4FQkGItzlwrg95JZMm
T7ljYIL8qjmJqZXtmLHjUjLzOHAurUtXpkyd9lfNA1c2fp0rOv+E/BkOnCu7
uBIGi8tXbyK/6j8LRdWzS5at4FgWE/Q6moeH9+/ZHpz6KZ+Pb7BvQDBnTgeD
7Jp1G46elEd+4RxDU0cXRIZjWczruMSBAwdFvk1GfuF/CgEhEdDlk95ncfKk
EDUtWrKsuvk78stnN9DlV4utO35KgZMnTcsqGDx4yONnL5BfPgcIi00YNIgn
JimNkyeFcHGOiChEUMgv/48AfHWLYMThk5Z//sI/Q9DcxgH55bMbB1fPiZMm
F9c0cvi8xhYPIKr/G+bYIQjn/O4IiJqg49wzuo/88rmfRz7Pxo4bj2RZ2cre
GXSm2/cCaIqG9y05f16IEqdMm27n4o7cA2zlaVDo0GHDOa/hgIuHz4SJk/Bg
5rcsXLz05j1DJKcm9oKp0+wfPkLuBPYBGj5m7DgI25Cc3cjcetZske69DrJm
7fqLuteQnBocO1N4tqmVLXIncDMvw2NgFED4YBEM8fMXLkbuB/axas3a63f0
UZ0dAlQIU338g5D7gU1EJaTw8PDmV9ShMsDawUVo5izkfuBmFFXPHjkuh9CA
vPLaPn36pmUVIHcFO8guruzdu09mQRlCGxSU1brxriSNi5f3SkojNKC0rnnA
gIH4W2g6ALIVrycBaG0QW7+xu+6ZgUB6ybIVaG14/ip81Ogx3XXiS3jWHAdX
T7Q2bJfYje+ZaY+I+He8vHzInySCjOmf1WLIvcEONm0VZ/cO6t8C8jJi5KgX
YVHIvcFykt5n9e8/AMmULxYre+d5CxYh9wZ3cotgtG2HBHIzUj/lQ07R/abo
a7/84OHh5fDmDbrsP3CwWz7/bmJps2bdBuRm5JRU9ejRkx37q2v/fA4eOQ4p
LXIzAD6+wdFJacjNYC3JH3P79u1X2fQNuSV6N+7s3ieF3AyWI6+ockb1LHIz
gNFjxr6MiEVuBheyYNESe1cP5GYAi5cut3VxR24Ga3F7/JS4fIzaDOCRr/9M
4dnIzWA5q8TWmT2wR24GAAEVhFXIzeA2akjBfOy798gtAWSPy53T0kFuBmu5
fO3WXklp5GYAKaSEtKLxK3JLWMvIUaNDouORmwGcVlaTV1JFbga3kVVc2aNH
Dy5peFdu3t0nJYPcDNZy5MQpLslGgT59+kL6htwMFlJa3wINOK+8FrklwD1j
s63bdyI3g9uAJgcND7kZZAgm5lt3SCA3g7WAbIJ4IjeDzOAhQ7vZrBd5lOSG
KS/A3NZx9dr1yM3gNqDJQcNDbgYZuEeQ1SI3g7WAbIJ4IjeDzPgJE4Mj45Cb
wUKSM/O4Z5R0dPNatGQZcjO4DWhy48ZPQG4GGbhHi5cuR24GawHZBPFEbgYZ
AUGhJy9CkJvBQmKS0rlnlPR8EsAlk/xcxdOXYdP4BZCbQcbD7/lsEVHkZrCW
pctXcsniHSAiOt/d5xlyM1hIaMzbMWPHITeDzLPg11On8yM3g9sIiY4fPWYs
cjPI2D18BF0SuRmsZe2GTfet7ZCbQQYGFBhWkJvBQuKSM3h5+ZCbQQYEvPuN
ksyDT/yym31SMldv3UNuBpkhQ4d1y4lfLlkeZdfE75c/m4LKz3CPCqsakFsC
aOteO3jkOHIzWMspBWXVcxeQmwFUN7f27NnrQ14pcktYSFXT9x49en7ML0Nu
CXDjrsGuvZLIzeBCevfuk/wxD7kZgPwZFWV1DeRmsJYLl64cOnoCuRlAVhFp
0G/4itwS1kJcl09MQ24GcFbz4vFTCsjN4ELGjB0XHBGH3Axg9z4pYmaB2gzW
QjA237x1O3IzAOiJfHyDkZvBcqbzz/ALeIXcDABGE82LusjN4EIgizS1tEVu
BjBTePYjX3/kZrCWp0Fhk6ZMRW4GYOvsTtzFgdoMlrN1u8RtfRPkZgALFy+1
c3mE3Awu5IzKWchTkJtR/vlfSNzSs4uQW8Ja8spqe/ToWVD5Gbkl6hraR0/K
IzeD5UDwwA1TeTUtPwYN4nmT8gG5JVyIuY3jilVrkJsRHpc0dNhw5Gawg/ET
JgaERCI3Y+PmbZC7ITeD5Ti5e4vOX4jcjIS0T/37D6hubkVuCRcS/uYdcc8k
ajPMHjisXC2G3Ax2sGmL+D0jM+RmjBs/ITA0CrkZLCcxnfhmvKqm72jNcHTz
mrdgEXJvcCfkPAX5ApO8oiqA3Bvs4KzmReQLTNnFVVyStbEcyFNI7x5MR2vG
uQs6yO8yN7NsxT/3rezQ2iA8a47zo8fIXcEOvJ++mDx1Glob7FweiYjOR+4K
NrF+45Y7BqZobVi0ZJmFrRNyV3Atl67e3Ll7H0ID0rIKIZrqluMsUFb/hfj3
MlI/IrThwKEjEFAhdwWbuK1vsmHTVoQG5JRU/+9/vTMLypG7gmsJj0viGzyE
w1ktRLmUfxubP+CGyWf2sXHztpsEIw6flOJh+Meo0WO4YfKZTZAnXUvrWpC4
F7BxcuOGyWcuZ/SYsc9fRXDyjCmZ+YuXLjezti+uaRLfuVvvxh3kTmAfdw3v
r92wicMnlT+jAkQnpr2OTRw8ZCjyqVG2MnU6v9eTQE6eMbu4av7CxTA+FlY1
SMkcPq91CbkTuBzpw0fVNbQ5eca3aZk9SD88vLx9+vSxf+iB3AnsI+l9dr9+
/Utqmzl5UkiByR4eP2HivAWLQMyR+4F9nDytyOHtXu9zisnuHTRoEMRRppa2
2NgGhxZHNy+hmbM4ecaohNQev/7AuGBiYVNU3YjcG+yAX0DQxcOHk2fcsm0H
1r28vHzHTylExCcjdwU78PQLmDh5Cie7+buMHKoGPGfuPH0Ti+46tcg8kM9C
RB0SFc+xM8K5etD8CM+ak1dWi9wb7EBb99pW8Z2cPKPY+o20Hja3cUTuCnZQ
2fht1OgxT1+EcuyMse/e07p32nSBrKJK1p6ophtx7JTCMbnTHDvd85BIqhs0
bvyE1KxC5H5gE3Bpffv2+5BfxrEzLv9nNZWHda7cQO4H9qGkdn6/9CGOne51
XBKVe0eMHJX4Phu5H7iZV1HxfIOHlNS1cOZ0vgGvsDeIj29wVGIaciewFQgt
rty6x7HTLVy8FOthGEGqW34gdwL7iHn3fsCAgXkV9Zw5XVB4LNa9AwcOCol+
i9wJ3A9kK9aOrowcmZSRY+vySE1D+7j8GRnZY3slpWEQOXzspJyCsu6NOz7P
g/PK6zqu4ZHfc8oN6tOn79OgMOSXz24eOLkJCgkzcmRRTRNEejfuGZ46oyJ7
XE5S5jB4WPrwURAKZXUNC1sn6FBVza0dVzJn7jyKh7eI76xs+o7cA+xmwaIl
RuYPGDny3Ydcu4ce6poXfzZgKZl9Bw5CAz6poHT5+u3H/i9zy2o7ruHZy9cU
9/bq9T8PvwDkl/9HcP2uweq16+l+Vd7w1e3xU7gpazdsGjpseL9+/eGGQpuH
kot616/eJoC2aOroqZ67sHuf1JRp03v27AX5KXQNqDP8zTvaCp0ePabcI9Ar
5NfOAUrrvwweMhRGQLrfJqRnEYzNQUlA6qHRQvK4dbsESIrGRV1o9uBhSHbO
XtABGV+2ctWgQTw8PLyQEJ1ROQveK6xupK1whuBMsnsXLVkGqoX88jmAwX0r
uFi6X0EDdvd5Bg5ct3HzsOEjIHWdv3Dx0ZPy0IC1da9BhAkN+MKlK9CA9+w/
AE0XGvDU6fzw72t39CEzoq3Q6+kLSgO+b22P/Nr/FDILK0A9oLVjC9/nlpzX
vjxq9Jjp/DNA6g3NrMNiE+GWdVxVTmkNDAeXrt4U37mbl5cPbj3ESNjfgmGd
fINgvGbvddVnXdZx2aHlIumSV4baw+RxE1sCKYy7r//6jVv69x+wYdNWkBQQ
899O3UAYA8GMuY0jjLwQsUCyCTFPfFom9pgJEyeBeydPmZpVXIX2qjkG5EqQ
tkQmpGILM/JKYfgbM3YciMahoydAiEJjEn7bgCGSgYD88rVb2yX2gHthSLW0
cy77/C/lAFfvJ+QGDBqF/ML/LKQOyh47pUD+9/NXERJ79oPswJAKDu9ynfmV
n+8a3oeBFZQK9ApUCwrvGZnBDdovfZDtF1WTekSGwC9JECFklKB275vUjyAm
0OxrSM0Ywjxo+eMnTIQoBRS+y9WGRL+FGwc1Q5wJGkXOpCDY6devHyS2aC+Z
w4CMgyvI/w4IjYK4Ghrw5m07vJ8FdXlKqqCqAYJMoZmzRo4aDbFQWnYRFILm
kPPQ7j3TxQ5gFBgwYGBQeMzS5SshLVI5q5n8MY9VlYNSwU2Bmw5ZwKat4nDL
fjuxwAK4SWRqSG9yUz2vBfICKc+KVWsc3LxYNVvyqagSRl4IYEDPfQKCe/bs
CaEO8uvlMImkfY8BIZGQSw4ZOkxJ7fy7D7msqtwvMGTbjl1Qv4Ky+u79UkOG
DK1o/Ib8kv84QJZFFyzs35+oA8W1zR0fDL0DwhK4rdFJ6XEpH1Iy83873wvA
kZA9QRe7pW/EiYviMpGxf+gxfMRIfgHBwLDo3x4M8X/KpwKIf8DD4Gfw9m9b
NdwUyEAhqpkwcSI2vP9LgAa8ZNkKuHzQATbNREFaCkMwDw8vnih1AQitQf+n
889or/3DHQSJsLJ3kVdUhVsJ+W+PHj3hhg4eMpSXl6937z4QQMJIKr5zNwyp
HUzRQ0fQvXEHfv2c1qXfZsfMwjUiA96DqBscdVpJrT0BB1XxDXgFztm5e9/E
yVPAn+BVaM/gYfAz2dsg0ScVlMhrTO3F6nCbFi5eOlN4dmhMAsJL5jAQdf+z
Zi1koJDps/VEEIFfu6MPAyUEpX+hkncZaLTQ/k+dUaHb/qHx39I3Bv0BZQAZ
h25i7fAQRliqRl5Y3Qj3F3KBvZLS06YLQAfZsWtve8vTUYlpc+ctmC0iSjXV
zGLoiUx5bXNuHfszNQxZxVWr166fMm26f3A43QPIEwh9+vSFY3btlbx6mwB+
y6/8jD0GvA2+snF2P6NyFoYDEB84GI7MKa2hrRCU/PL129AROL0Hr+nf3PKG
zPLm4iYOnvTL/1k7uvLxDT5xWpFjS2mxyRnzFy4Wni0CHYGjHv4z0Te15Bs8
BFJO2q9guDwmdxra6tIV/9g99OhUEpqaVaimoQ3ZgfCsOXAK2rsPtSmqnhs3
fsLbtE/sujqsyNRXe7s+2XnaWFASSvRnyzvJWr7xy2dzKEVSGNBSkA7ateaS
uhZTKzsR0fldmEAAGXH28IGxG5T/0NETEfHJtMdEJqROmDQZamb3NRZkZRpb
++5SMZ99gOhtIgeMl6g9UnRJi6xg+9SoiaUtKAwEz+w+Ee0tgGBm9JixuM50
DFlhXkbEUZVDSCOnoAwN+PCxk3QbMIOU1n8xt3Gct2DR+AkTvZ6+oD1AXfMi
G3WmTWTmXA+9qmMqINnWBdoQkHXUjKyvZJt7yQoDoR3tBC/5D6bAt9BHfjsD
1gHRSenkgeDIiVMFVQ1U30IWzGad+TfSz2elDLVjKcxUfOpSwMa4kawwjMxx
sQlNHT1cZzqgPYWBWwb5zopVa1i4Bnrf2h7ORbcjsFFn2kSGzCxFr8vPPgal
FQfHJN8k2M+VIuuMq0EmWzbEtqcwICmQmUK+QzCxYNW5IG4UW78RVOvJi1Cq
r9iqM3lxQaukSW486ij/MMnzbVFkRmlYYqadW8DOkwZkty8x/pjPhlPXcIHC
kMF1pj0M7lvRKkx5w1dojaTVH2OW7wFI+VSwZt0G6Ai0UxNknWH9/AxGZEQ0
wwJ/Cd2/hHu4iZJ0Zt6tlA/NLHZvdkk1XYUBh0/nn7H8n9Xs2MQCowYvL99J
BSWqx9DYpTPNtWa6RkT3SttffveF6tvynPj9siT9kQt8+pnFVwpApskNCkMG
1xlagsJjQUloFWbrdgkR0flU20dZCwzfcGp3n2dU5Yqq52bNmcvi9SaKyMg4
3/5IE640VelrGRK/Pehmks/ikH7T1u3bJfZQKYxvwCsIYG7cM2TfJi7Qk0VL
lq3dsIlWZ0aNHsPg42mMUp15Tt1irrS+yI3kTFqVbm6wukIKZmS87atZfJmv
ouKhFQWERrHJjV1ATUNbaOas0npqsf07gXCdX0CQaks/WWEWLFrCyHYXJnno
5UerMxWN30TnLzx7QYeV52oTmZm6b9PpxCqtqb5uQsQ4x0j2BStXJcweOEBg
RuVJssLYOLuz272F1Y0QKdHqjNvjp0OGDiNvOWYlzV8L6ujmm1/dCcakOMfD
upyVogodWVBIWO/mXXZ7slNUNbeCvKuc1URuCTdwWklt2cpV2MGUkwpDhq7O
RCelQyEMUiw70U+R0V9rV1hO74CyhJcrpEgH2BfRPaALpGUXQR7q+SQQW8gx
hSHTns4cOHQEQiw2nrr5a1ZBeXBsupVHqOpN5+WHCGSRsSpjpcgoq2ssXrqc
EzvGOwmkS9CAX7yOQW4JWvyDw6G1U71gZ8/+A5xUGDJknaHaOqV74w4MUiyL
OX+KjMFOzyq6S0gVHyO3kOYtl5pls+oJSujah4+dxJaERL/lpMKQIevM5m07
sIVwiyHEgkCLledqqH8VFHXurvtWJUid6K0xsVRkAsOiodmwNaNnBkgQpvPP
YGa58E8HGt6UadPvGZlhCyFPHz1mbHZJNeftIRibT546DbuBhBxzwlDFmlO0
icwOj3ZEJiNiE7Ff6C+3zGWJyBiaWU+YNBm7jw5hbA9mgDFgErYQQiwItFj1
HsKizHenVYyp9gYIHbXarOt7zjXhoo4ha0UGOi904ZsEjjyT0iUgQYA0QV5R
FbklqLhy697S5SuxidL73BLI02mnYTl2R1avXU959JsMxJz9+vVPzylmwSn+
S5foZ0OlcYFLiOmSwTa3igqmTwd6MnzESKpXGCmpnV+ybAWq2N4vMISPbzDV
g65SB2WPnDjFfOVVVdnnlcnr1AZLtJ7qeiU/elP0pqilzdVfXW6zWGRAXiDk
5vJnn8nPaaZk5iO3hPNAO580Zaqzhw+2cOMWcenDRxFalfKpAHoB1dsktm6X
OKd1iQX1t038zrpOb/njS2usqxNxA7DU/TMRLFjVMrdxFJ41B1sSEBoFiRIb
tzQzwInTiv+sWYvtmJEJqQMHDvrt+99+x48Mf49ZpO3TywjpdObVm6sNtUkS
JP3IspQFsgCXMG26gN1DD4TOZBCJPftZMgNc/afx0PsJBM8VTd8pJZb2LuMm
TMytqEdrmLGl7fiJk4pqmyklPgGvRo4aXfr5X2Yrr0mVJS9hyz4yy2+l/rY2
/4KyPmkjma9LBQsuZN6CRQb3rSgfyxq+Qqe4pW+C1r2FNU1Tp/NjDQNWrFpz
7a4BczV/C7SymkEUGVP58K+0B1Tkxe/7OfHrblb8g/kLgRBx7Ljx5Y3f0PqT
EZ4Fhw8bPqK4rgW5JRxGbP3Gy9dvY0uEhGeb2zohNwwQEZ1vZGGDLREUErZy
eMhszRSRkSSI6kSFVGOaemOtm4ktaf3aQMwmv4jpSwiKiOMbPAR6NKXkgZMb
v4BgVQsL+heTOLh7T5k2vbL5P5m1d/MC5WHOttZIFwfSg2AGGxyKi3/9trIi
//rFtuc4pF0NaRW+82zYvO3C5avInckgs+bMNbW2R24GJ4kjvZbtU3EVpcTv
ReiIkaNYEC2wAhMru9kiotiSu0ZmC5csY7bmNpGZI2sMY+5sJS8trxSPqEzX
ZxEKmmaC5GcN1F/5V7FAB/ZLHzqtpIYtWbxsxW0DU+S+BSB8hVjRzecZtgSC
2Ed+z5mptiwtfAN5OUnaUtI2yTu5LD67MiIp08bVf6ccMVESlCanSw43MpgV
mQTSREdGfhlyZzKIkfmDufMWIDeDk8grqkofPoot2S6xR13zYifr+ZFfWPYi
JtMvra6wrSSnoDanmVnzILAcOmy4/6sISkl+VQMvL19YXBJTNf8UGQNx59Rb
OvdnUK+u6s/XCvEtZsEgC+oNGv42PYtSEhqbyMPDm1f5uXNVNX9Jzcj3jcwK
K2wT/+bmlILmSqYt1Ll6U2zDJmzJxSs3Nm4RZ67aL6/c3OZL0Vu2PnB/m1ly
SKDfXOKUl+mp11+YtF9R7fxeKRmm7xS7GjAtkP4TXx0fEcfymrmWmbPmuD5+
SvmYklVInADPKuyE07Lf6163W6X59IrXm1sWXvsICdH13xODnohphoc3scBC
JXUNib2S2JKdu/ddvU1gqlqKyDyqKv9c4+MRIKluKXrQQPioudhFP51nBRmN
rHGvs6cvVSQmI3vsuPyZzlTyNT407KDqA3H914aPI8/dcD/1pKyosdpe31bc
uaScaQsziypBBt+kZVJKYlM+DBrEg82husS3lDfxGrddxORMZkkbCMneX67q
dtwyxv1jcwUkTcWJUqRpmQX30j8x15EhoYakj5ka2N2AadkjKQ3azo6auRAQ
1V69/vc+r5RScunara3bJRiuofVD9KttRw1XG79PafhZkuTvK234bOsh/aVm
2SWsMDLpQ27v3n2wQ//l67d37ZNC7j1GOHtB5+DRE5SPkIRCj45KTGO0huYG
HxsnUZkHiqG1peSSpmqru54Khk6zpSzUY1kz1bnvwEFs7FrV8gNiraikdOTe
+y0l9V/69OmbnJnf1Ro40YBpuXZHX3znbuTe4wwBoVHjxk/AlmwR33lT35jB
X89/Fy4uSxDWjIyox5TXZ6me0ueXND4WTFkV+pGT8dHCPUTd5PlZh/hHGY2d
HX8nTp7i9yKU8tEn4NWUadORe48RIBPBLt+8jHwzYuQohn/9y0snZxEpQ3HX
Uuz0aVFMwFLIRGR9nKp+Pb6hxsP1tVN2pyMQIwubVWLrsCUrVq25/8ABufd+
Syf9SQ3jDTg3M9PKI+ysScAFpxiryHIm06hnweHjJ05C7j3OcINgRBW3jB03
PjAsmqFfr87RVDbgl7JSj/11Pa7+k/IJ4sKB0c+Fg5ZXHp5r1J9ZvKsvbv6a
npyoePaB1KPCvM7YCfnRlVv3KB9zy+t69uyVXVqD3IG/Zeiw4SExCZSP94zN
12/ayuDv5sa/FJMmzFAI9Kv+pbwo+vkiKYKQzptkYlP/kZOZ7fQ09rrNcxkV
UwEpC7XOhzfh8cl8g4dgS86onjtxWhG5937LXSMzxv1JDYMNuLkl2NPvsEmM
67vKpKyix8+Cdh4zWKQV5JTd9TCyoLoRGvCHgnLkDuQAECdr612nfEzPLfnf
/3pj96W0T2u8h4uwJEFQOST41+mLspQQsQMEQdXXYcTyH1mRz1cccrn36b/h
tTw7VkL2gXp0E+OTlro37lBNy0ybLuD1LAi5AzsmMSOnb99+ZQ3/7RWRkT12
XvsyQ7/eVEkgvm5CX8y2sOyXr76/srMVlNRf71hMKm9NiU0w8E32Tq8LdrYX
7JLIVDR9hyQuPu0TpcTG2Z24gRa1A3+L9OGjjPqTGoYbcEyQjHUONnQpSHwF
4i+kGhJU13XLBYWE3X39kTuQeeQUlB3cvSFvbe+AGYIzPZ++oHx86P1EeLYI
Q5U35GudgZBSf4VlXumv9y7Bw0VQkrD4fhYxwm+uMdYxFNSMiceGl83VBtoG
wtqxbxmOOSE/mjx1GraEG6bO8qsaDh45/iQorL05UjtXz/kLF2NLZs6aA05m
pPLSxOBVkBNJWZ1P+FU0mqsIWjD+mqvGUO1za4106aLIAAtJf82T8pG8Lox8
extkmldvE2Dsa+8AaK7YZYtOwGgDbnhw3Wy1XpBDFsYVzbXGOgbEpbGwru+p
kzooq3npClr3soQp06b36NFj8JChsidOPQ+JpN1hxcPDi11W0NK9BtfOSM1l
qaFrD0AXsKBu6s2NNteNIJ+VDSLuPassfLtPhjD7bnrBL7/+1cPQVEDazbiA
0dmDnLJauBDo1JQS8l9FR+ve3Ip68t8knTBpMtgTm/KB6oDr9wyxARj02V69
/sfYyt33UHsIVwgCcgG+9b98VVmefPAQgf/wYwfqrchMiQw4U+XcBcpHaCpw
Xcg3nyionAUzILMQ27DJ0t4FsgyqA4YMHdaJWXQMDDZg8oDIL2kg4VVT8d9h
33xMzARIz7V1eXVPQ0fv8HE5tO5lCWSRofxAMACxJTYqhuQo5VMB5aOi2nmq
bWPtkRPoNVOSwH/I246qqddlnjkO+exDwzyigJQQZw+IDzL/Olh8C7CymiF1
XzGyE90B2hp2RAM9hNQDrXspIkP5mbdg0S19k4+FFeQDINY6cOgI1fHYrb/t
02x7g/gI4awbyVm/flUY6b9AiiCoHZdEHQcyJTJnL+gcO6WALenTp2/Sh1y0
Hj6trI5176BBPDAIPn4eTHkEBrI8CLq6UDODDZiYLqWlEDzTwn/ZltnieBuE
yFDySX2X9ynp3rizX/oQh/1p7+b1wMmNtYwcNaoHvZ9p/ALQQ/VNLeHfmUWV
FBtOnFZU09BmwNrWRE9iSCmoHh7x60aCsnevVkM+qxIWSspzs557zpTUX/Wg
4FeR+f7S5oGgpMEBf+qBqQOomhNE0UuWr2S5xzqFiZUtXff26tVLRHT+KUWV
bTt2HZU7TbEZAgP4lqEd+83V+lrEAXSjc2k5Hdfpr3UoKqP+LaZEBkZVrB5W
E/9qNi84Ga2HN2zeStfDQ4YO3bxtu97Nu/DvDpIp5hswXSrL0o8fJwgc9XpQ
2PWtRDAY7di1t8u/3jXWbdyybOUq1tKvf3+69wh+Bg4cOHnKNPgHdo0GesQ5
rUsMWPsj87mnsCRB6EpS5i/jaesbd2diPmvyibTk2pri4ybY7tSlwV6fOsb9
A6NYXOpHyscbBCOQUJZ7rFMsWrq8PffCD9/gwSNGjsSu0aTlFEM8xtD1Njc+
uAaRDFGHfxkrmyrvaBInZJSjaR88ZEpkLly+SjXTy8PLO3feArQeHjtufHvu
7d279+gxY+EfXVqjYbAB0+VrsJ2doNR9SZ/y0k6f9z/uGpnBGNTlX+ceqNIl
+Bk1egzkua/fvCMfQJWDQK50RvUcIzWXZ0aJSxOELsenYu5ReWHaCXl98ntx
SV3jR6ovUWRW21CLTLCtDYjMnse1jF8LcTYDk9ldunaLwekj9kGbLsGPoJAw
2EY2FXK6g0eOU47PKqmGAzqYh8fQGuvmTNRh3zqMyLSmBPsukyIH+bThEFMi
o3FRV/bEKWzJgAEDsU9DIIEqXYIfSOK2S+xx9vQlP1vXu3efdx/zulAzYw2Y
lh+Z0S/EZEy3O+RkMrdVBqLE3fsPoHUvS6CIDDSYvVIynk8CqdYLqHIQyJUY
nU1trne+az7jiKdVW8RYlJN+Xs92sTQxn9XP/VmYFQCZr/4/1vlUczIvHljP
kDSQec7I7ASRsoavPX7N7M5rX6bqFJwHKzIjRo46dUblVfRbbDZ05dY97GM1
RbXNcGROGUPSWlmcfkJOf+61pLZe8DUhJEhK2ZwY5GvHJtJp4UyJjJK6BtiP
LenZs1dqdhFaD2NFBrJjg/tWVJujeHn5aOfbGYKxBkxFUUaclJzVIe8i5p9p
0ta7jnxSkSVMmy6weu16MxvH9h7Hg8AG+gXlo5GFDRzPYOWV1aUW+nbLNZ9d
931728pP5l6kX8zrDdLEjQev2vLZktiAxVLE1cBft2d/87tvLiBlphzNaHeI
TEjl5RuM7b8nFZQU1c6jdS+ITL9+/Xftk3L39ae72mtoZg1ZMJXDX4THMlb/
j9z3iadULcUNI0x9ozTveZ50zfJ1tCemn3aFNBMy/8ekyFDt9M4tr4N+3emn
OFkNRN1Tp/NDKtfe7O64CRMZ3TtKAyMNGEtJVtJRVecLkXX0nN9pQD/lFVXR
upclYF/gQBexDZugI1A+QhpFtfPzd7TmFpT6R30KzGwohWCe9GdEFhpnUt7B
UlmadOAgYdbN1NxffqvF4aYRv4y7WRGjL1IwsbJbuVoMW7J42QoWvFWGOSqa
vnf8Xq+giDhQFWzJxi3inXvJQ1NLyvsc7+i8mLJv1c11ppcM+KXMlCLpvAmK
SZEZM3ZcQGgU5aNvYAjVxiQkQAPueJ4c/HnH8D4Tp/hNA6ZQlpt6WsuLkPzf
Y++lb0KUntZVdPXUf8qDG8yjrnkRu1gPwzHVzs/O0Ox0xwTy2UOBmLnK5jqr
qyaCSr9uqmws1FbSn6X3NoXhmPPYKQVs3AK9GxJA7Dwwd1JS/6V37z7YjTEa
Onpdn0qqSjsuS+A/5GVbTrffdV1kaHd66928u3PPfuQO/C3gT6pFMSag14BJ
lBe8V7/mb5eF1fbvYU5uagyH4lSAckKi17UdPn8cTh4+c+bOw5YsXLLsgZNb
V2r7nK1+Sp9f2pmQ80s+W5AYsuGQ1ZnwhrYb9yMz3H/5YadrKZ14Kdb8hYvt
HnpQPka8TaHKnrgWEdH5jo8eUz5CYiU4c1bXqiqJC1wqRRC8ENPOTmnSTBdx
G2qn39BCu9Ob6mExrsXN51mX/UlNOw24ovijuqqR6Gm7jer2ZDYoWy09ZjxT
xoXqSMaJSc4YOHAQ0y/T+DNIzS6CoRa73iGnoNy1VLEs/fWGAwTqoIXIt7fB
gdvOOKv6ZQanF3r7BYqfcT4XUsX48h+Y17dvv8SMHEoJZE/EN2Cj9h4jQKCI
3Xr0oaC8Z89eXZrr+P7ayU5QUn8N9X4AEO0QmcsPt6hYLTxiLCJrPPeYpdg5
l71XA20Z7gLE91FgVsGASVOmYh9751rAn716/Y92J3AXoN+Am+ssrhjTefWW
JEHg2DPP+i6ey8LOeemKf5B7j2OMHjMWOxXp7f8SSrDP9P2O1uKKujdpORb6
1sSFD83Xz7PqMmu/Ux1WXl37OjbdwjvOPDgnvqpzAg53REh4NrYEsifls5rI
XccIRuYP1qzbgC1ZsGiJvqllJypp/ppVWBkWnyhPfNbGQNwx901hYwGL3qkF
VJL/VoWnL6XkU3FVV5UQAeMmTHwWHM5EDQw1YNZy6owKg1vr26XlT2KL+E7d
63coH6uafwjMEHrg6Mbgr1cWpSqo2a5Tc9iq6SKh7Sx+3mGDiu26m2/fNLLM
QsiVCCYW2BKIkB3dHyN3HSNExBMzu+LaFkqJuY0TUTMZreHH+6BnG5TtNpx1
Er/wUOKC85azdmuV7WR9K8tZZOFDL9Lfqmj8TikB3xJzENSuY5Adu/ZqXb7W
5V/nQAOmZbaIqI2TO3LXcQwHN+8pU6dXNrVSSm7pmyxetgK5YWReRryBTlpQ
1UgpefaS+EclSuq+ILeNQebMnQf5HeUjWD5i5ChiMoLaMDJi6zZeunoLW7Jm
7QbsuMPl0IoklxMYFjN4yNDC6iZmKqn6oyhvJL6d3vXxM0pJbsVnHh7e0Ngk
5LYB+2UOy51RwZbs2L1P5dwF5IYxjpGFDegMtkRVQ1tcYg9yw4DYFOLfqsgs
qqKURL/LGDBg4KfiauS2MUhFU+ukyVMdH/kgt4RB9krJnFZWR24Gh9G5cnPt
hs3YkhOnlbbt3I3csLjUTNJSdSalJDW7uF+//u8+5iO3jXEKa5qHDB32PCSK
UpLyqRC6dnh8CnLb9ksfOnDoKLbkuLyi9OFjyA3rFHo3761asw65GYzwPq8M
GvDb99nILeEwHwuJ76vH9mUY2kaOGm3t6IbQKhihFi5Zpqh2Hlt4VuvS1h27
kHuss8BV7N5/AFuicVEPwpvSz18RWuXi9QTULz23lFJCDmJDYhKRe6xTZJXU
wGAUnfQeuSW/5cKlqxs2b0NuBhJosxJnT7+hw4aD8KIySffG3RlCwsV1Xygl
JfX/gvQ9DniF3F2dJfFDLoxfaTkllJKyhm8iovPPX9RFZRIkRKNGj7FycMUW
3jYwXbR0OXJ3dQEZ2ePH5BSQm9ExcNPHjBv/yC8AuSVIeP0meeDAQZEJadhC
UJ7N23YgsScqMR3seRkZjy2EMGbegkXIfdU1du2TogpmIt4S/7r9q+gEJPaA
MVTzQh8KKoaPGAmDC3JfdQFyg4FmjNySDtC6fG22iGhl8w/klqACuvDceQtA
bCkl2aW1ILxXb+tz2BKIfoVni6hf0MEWguDQyuAfBLkL27t6YQt1rt7iFxDM
yC/nsDEEU0swBkzCFoLmgBIid1SXgUxk1py5aDPQDgiLewcNGP6P3BKEwN0B
mYU7hS2E9BySppsEY46ZAQoDecTOPfuxcgdJk+DMWZeu3UbuJWYAhaHq2hVN
rZIHZeHSqPo7WzE0f8A3eEhgWAy2EPImyJ7+oEUlWqDBiM5fCGMlcktogc4F
AgiRDHJLkENOmqjElpM6Q1dhAOWzmgsWLy1v/I7cRUxCm6RwWGfoKkx6binc
YhevJ8j9wySQNA0axBMc9Ra5JVSA9IEAUrXqvxZt3euQqmCnW6vadIbdeRP0
MroK8zwkClpObMpH5M5hHggVRo8Za2Hngi2k6Ax2Zpgd3DOxoFWYyuYfm7Zu
BwOQO4clXL5+BzxZWNOM3BIKQRFvoAGDACK3hEuAaGHFP2vWbdxCqzNjx0+A
1ohd8WQhDm7eI0aOkjp4hEphIKwCfdO/b4XcM6zC8+kLHh5eqiUG0JljcgpD
hg6jWu5hFR8LK7fv2gsJEa3CHDkhP51/Rk5ZHXLPsATw5Cqx9avXbiiqbUFu
DBCZkAYN+7bhfeSWcBV5lQ1LV/xDqzPQDkEEoMuztiNAirRHUpp2UrSqTWGu
3TFA7hPW4uj+mFZnANfHzyDOgXyKtakTnA7a+a59UlRTLhSFSc0uRu4TFlJQ
3bRylRg36AxZYSC4Qu4TLqQ9naki7eCCAXHrdgnm116hDRhb2o4ZO27bzt20
3aq7KgyZ9nQGdAAkF1omwdQSOguTZwmPT5HYKzls+Ai7h55UX3VXhSHDDTqD
K8xv6UBnoCOcVFDm4eVbuGSZpf3DLiwaJn3IU1LXAA2ZM3eejfMj2gO6t8KQ
aU9nqkg7IectXMw3eIi8klp8elZna4aU09bFY9nKVYMG8Rw9eZp2ibx7KwwZ
tDqDKwyDgM5AQ50tIkr3KZvcis+QaQoIzoTARu6MioWdS2zKxw42GuVXNT59
GX71tv7GLeLk92/7v4qke+Q9EwtQsOt3DZF7gN2AzoAOnL+oS1eog8Lj9ksf
6t9/AEi93s17vi9Cwecd1PYm7ZO1o9tpZfWx4ydMmy5w454R3ZmWdx/zV4mt
F5gh1I0VhgzozKo164Rni3D4aV9D8we8fIN1b9xF7oE/AhgTL1y6OnDgoIt6
N9pbQfZ+HnxKUXXJ8pUDBgwE38LwAaMkDMGqGtoQrpw4rQQ9RXDmrF69/jd+
4iRxiT3QX9pbRknOLIChZ/KUaU+CXiO/ds4AQ56I6HyI6CLeptI9ABJJiOh2
7N43afLUnj17gTjslZIBr4JvVc5dAEmBWAVEY/CQoSBHEFtCkOnxJLA9tTey
sIF7dExOATQf+bVzAGi0OlduQgPW1LnCgRXk1KwiGBEmTJr8Jz78ghYYCGA4
gAA++l1GB4fBDYWeYmJld1brkqLa+ePyiiA+0BHgLrv5+P92Xyv8IrR/ECiI
oJBfMieBxq9xUQ86Ajiq471AmUVVICCXrt1WOa8FvoUA8ozqOfA2SAckmB13
IhD29Zu2gs7DoID8kjkMhOIg43PnLWDrjnEzGyeQ+oNHTnQccOK0R0n9v2qa
FyG2V1A5m5CRw8KaYcx95BcAY/G4CRO9ngUhv1JUhMQkzpw1B6KaB07urB1z
3+eVQTg6ZOgwGdnjueX1yK8UCZCQntO+DEoO4gx5JQtrhgbs+fSF2PpNY8aN
d/d9jvxK/3QgpIFYvV+//hu3iHcQkzMINPgb94ymTReAu6N1+Vq32arRZUDJ
bxuY8gsIjhk7DsJ75h+BDwyLId+vDZu3+QSGIL9A5Lx+kwzJOzgEkhqIrplt
wBWfb+mbwP0aPWYsxKLZpbXIL7DbQB4ZQRmm88+4dsfgVXRCpxaYskpqvP1f
Hj15GuKiZStX2bp44NutsZBHxk1bt0Nf2L3/wEPvp51Sm4qm1qjEdAMza9H5
CyF6h8jzL3xFUsdA5q6te33s+AlTp/FfuUUIjnrbqQYMYgIN+PipMzw8vEuW
r4TIk2ufyvzTIa+TwhA5dNhw6A7zFi4+Jqdgam0Pg0XKp8LMoqr8qkaIVaCD
JH3I83sRpnfznsReySlTp/fs2QvU6cgJeS5/MB85iR9yldQ1hGeL9Or1P5D0
rdsloGtAAAnl6bmlEPgVVDd9Kq5OzSqKTnpv5eB6WlmdvGzNw8u3cpUY6Azz
O226MeWN3+1dvSAmHzZ8RN++/eYtWAQDn4mVXVjcO2jAHwsryQ0YFAka8JOg
11dv6+/aJwW6BA0Ywu/Dx+S45BW1fwnQ7EFwoEdA24bcHzpFD8xPnz59J06a
sn3X3svX7zwOeIWnRZ0FtOJ5SBSklvsOHITgHHoE1r3Q5kFWFi1dflJB2dzW
Ofpdxt/8xpKuATJi99BT+azmP6vX0jbg3r37TJg0WVxiz6Vrt72fB+NpEZcA
ASRkrNA7IHpHbkz3A2SksKYZxtmS+n+RG9MtITdgCGbwBoyDg4ODg4ODw1oq
cXBwcHBwcHBwcHBwcHBwcHBwcHBwuhf/D1PeW8g=
     "], {{0, 162}, {375, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{238., Automatic},
   ImageSizeRaw->{375, 162},
   PlotRange->{{0, 375}, {0, 162}}], ";", 
  RowBox[{"AFD1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "a", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "b", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "a", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "b", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "a", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "b", ",", "2"}], "}"}]}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnfk/VO3fwL+v5/nl+fH5C77PnZY7YsxmX7LvOxGyplJpERKJohCyli2k
lNLdQqobZSdli7rdKlm6UZYisg2D51NTXvMdjDNj9rner5NXc+Zc1/nMOZ/z
Wa5zLRvcj1jt/a9//etfPv8Df6zc/DWPHXMLsP5f+LDjsM/+fYf3eBge9t2z
b88xRff/hp3V8K8V/n3//yICgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgE
AoHgNNTmBEc97fCKWX4LghAXKNXB2rht3oVT/BYEIS4glUPwmCWVm6dM9jSX
V9U29H2d57dQCFGGpnKHk24F20iT8dJk6U0EVaP40uGFBX5LhhBRQOW08BsI
eOLepMqRqcXprkd+xhvxOgdKR/gtGUJE+W7lCBLGZ8unfuSsCwsLQ9edybLS
foVj/BYNIZosTx/mWiPN8JvtLr7mo1QIEWaFjPXtRXvSb6ZRL/gnFEKUWa5y
sy0RJrIbbVPf8VEqhAhDi+Uso2qn575/hFiuL2snkUAKKZ3jt2gI0YSmciQi
+UBK7ej04uSbP7z0JEjmwU2obRjBHebrQs3kzBPyEvZob6S1yxH1duU0IoVD
cJ9vn5pqSqtevB5B6oZYxvw8eieFWJuenp6HDx9GR4S5OdlbmhqaGOhYmBg4
2e8ICzl5586dN2/eYFSkpLjolpYWbkvLe+bm5tra2vLy8s6cCnC0szY31jfW
17YyM9rt4hgbFf748ePe3l5+yygcTE1NwWWES6ehqnj4wN705MTKysrXr1+/
ffv2r7/+evbsWWZmpp/3IQMdDT0t9fT09JGRVV81zc7OnvT3kZHc/OKFSDWa
DQ0NJSUlaaopgY6d8D2anZ39/PlzUD+4RK9evSorK4NvD+x1V1eW32ljcf/+
/ZmZGX6LLKCAhoCCqSiQ9u9xAzVbWOtN+cuXLwP8vBXJ+HNnTo2PjzN8++3b
t73uzqBvsFVXV3NNap4Cz9epAD/4ycGBx//++2/mB1Op1JKSEjB621UUrly5
gqILBuAJ3WFpusfNqauri6WC8MgHnfAFi1dXV7e0c3Bw0MbChKZvsJWWlnJa
Xj4AvwIsf0RYCBPDviIQhEBA4uxgC7EKl2QTOm7fvg3GLTc3l+0a4HaAo0m4
cB7+//79e9DAJX2DzefIQQgLCwsLwctAHAinA9998+bNGzduXLt2DRwTGIGs
rCxw2ZcvXwZnnZaWlpqampKSkpycDIY37VJC6sV48FaJP0igAz7CfvgWjoGD
oQgUz8jIgDpzcnKgfjjR3bt3CwoKHj169OTJk/Ly8tra2oaGhtbW1vb29u7u
7k+fPoEKTU9PM/l1YKAggmV4rFgCagCp4CJDjMdeDaIE3BTt7SqdnZ3rrOfz
589g2SDd8PRwpdc32gbOGsIbCA6PenkeO3zA96gXREGBx49BsAeuCvwUbCEn
/U8HnQgNDoT7e/Z0EPjr8NBgsCqRZ0+fP3cGtqjw0BU3+AoOg4OhFJSFeqBO
qNzf5wicyPvQ/kP794BU4OPA1EB8BdmQkZ6WjoaqmpKcPBGHk9oCEsJfBZKs
lroyJAKQDoDAICH8HFAVD9ddu3baLA8eWAWCYQjwQPnXWY9QAwYH9I1VZ7oa
YC5A60ABIImj1zc4C0fq5x4Q4X/58qWvr+/du3fNzc0Qyj548ADsZFxcHOQI
yvJESKA4ciKa1omtrWtpaYGfv377Rg9onamhLjgycKAk2W00lbt+/ToHT8FL
rl69amtlBqkQB+sErQMPC+EHB+sUCuC5NjPSA93geM0QJoHDGhgYAMtAC+og
TuP4WXgARHqgG5x9JGlABGu/wxJSWo7XLMjERoUfObiPS5UnxkZB5Lb4w+jt
dXeGqJ5LJ+IeEPBDmgkZDTcqX1hYcHOyhxSJG5ULJsPDQ4pk/NDQEJfqp1Ao
+trbGxsbF3/cu46ODi6diHtADg5xKfca03p6eiBE5KzLFmRSk+MhQ+TqKSDR
O37sMFdPwVXAOEM4ytVTgJcR3iiXJebm5nQ05CGIxXg8eIHhd/VlpWUve8aw
j90bHR3lqiHlKpDCqyqSmTfWMQBXabSrGa5S4/sRjFeptrYWwmk2RRRgujoZ
M6PamsqdO0ywlp/uvuevLSe9GfSHSCC6R9zN8tgmd6xgBkPkG3j8WHZ2Novy
8hp4KMbGGEeHJSYmRoWHYio/VR9uvNEpseiPAAMlvKQSQRIng7M+++dn6toe
GbTUSE8Lsi02xBZkVBVlaqsr6PekpSRER2K6nnBNutOsQdMOXWn9tkgdb7vl
YypJlt5EPnQLi8rdvn3b3+cIe2LzjKamJjA1DK+iPD1ci4qKsBRfoNSG6v+f
PBGn4RH94p+5eUp/WYg2AU8MKPyCpfhJf58bN26wI7cAI7vtN7z0hhs5WUuv
6Q8f9Hj0MB9T4dm/L1lJEG0vdP3yMHNvU13l/41R5dra2oz1tdkTm2eAyslI
blZRING/zFJTkuvr68NSHFTujN6/CaZBDZ9/mbWhGwfIvyn73MNSPCcn51SA
H+tSCzSgcrQtNCRgdvb7eGNdTYWebmxtTSN34eppny6fn/+prrSHGqPKwenI
eOnlbkugoKkcbHjprbdu3YI9oGzqyvIYi9NUjuydv3RBFiht8ZabCTtisBRv
bm62NDVkS3DBZUnlYPNw2zk6OgL/mZ2lYCm70HfZGb/Z4kIjeyoHGOpqcqMp
lYMsqRxtizx7ur6+fqeNBcbiy1VukfIhw2kDzuwMluKDg4NgYNkSfL2cCvTx
2u/GjY1e5WAz0leDv1jFGs71IEqwbeUAAx0NF0e7g/t2C+wGd5yhBwLom5P9
DoxXaAWVm2mJNd9I3hmHpTi4AHAEGM/FWZ4UPy4suMuNjUHlws4Ewt81u1/+
ZKr5nJGEnH18zy+jOPtXnAN5A3aVg4zsckpSvgATFnKSXt/AvcZGhbOschYh
zaO/dnVlgmvYHvQES/GRkRFIPTCeS1hYUjaCjMSt3Guwh4jbODk5gaXs/Pz8
y/PaRALJN/fN3Bz168uswwabiFIS2FVOR0NVwPsl0jtWVUXyixcvWltbrc2N
MRanqRxOaovu/vjm4Zn5ifd3vJXk8Orn6yaxFO/v79+uorAO8QURmr6pKsrU
PfvZG9zKTLe1pRlr+ZHmFA8yadtGeBhJ8qrHU1IDdX7DqHI0r0HLWQSWJZUz
N9b/559/Fn+JPTeHafg/TeVUXMMv7VMh4qQU8VvxJCWvrJZpbJMHVFRUQOCx
HvkFENA3U0MN+hQV4sbcG6y00FJn+l5VV1ZUdQ5OsRTLPXv2zMHWinWReQpN
5fbvcaPPrI31tdcc2kBjKZabWpjqfVVVVVndNcTCO4u0SwkxkWdZFlqw2bvb
cezrV/o9N3OvBgX4sFcbSyqXnp4eHhrM3ol4BqhcdEQYQz8if58jGLuVrpA+
sIKXp8fDhw/ZKSnALPdrHe/eaG+XY8/fsaRy4DIEv/vritfh1q1bGHt2rUfl
JiYmIF/++PEjyyWFECcHS/Z64M9T+h8l+YTfbl1qNlmN9vZ2DVVFCgVTAyAz
5qb73zZVlz+pftbIs5mov337pixPhNh+7UMpH+CCRN55zcZkxbm5uQf37WZD
PGHk0cN8Zwdbrp7izKmASwkX1lnJbGOci+YWyAeV5AhyMpuJStohBb28mYn6
3JlTtAFr3MPCxKCqqoqrpxAcwJtoqSs/f/6cS/X39vaClfj06dM665koO388
KruhZxLUbHbwReSOzUQtvzpMDTzrpaOjQ01J7vPnz1yqv6SkxNRQF2sDqUhQ
XFxsoKMB4QTHa4bL6O7swPHO51BtxyVzObxZdiePZi+EtOKolyc3ah4ZGYGo
g+1RscLLCd+jZ08HcbzanJwcDo4lmZ+f/9xe/fhe7o2rmZe8tPEkw5S3PFK5
mZkZMEQPHjzgeM1+3ociwkI4Xq3g8/XrV11Ntby8PA7WWVNTo6pI5tSIOeqn
6jg3Obz0Vk1NLRsLE4vtsrJEA56p3OKPcZfwc16+fMnBOtPT000MdKamxHRe
vK6uLu3tKpwa2lxbWws3iGMhInWmKkgezNqFqgEIecCx9mba8dLK0SgtLYWg
jlPzlV2+fNlQV1NMGkZWo7OzE1KJzMzMdYayRUVFoG+cjE9mepIdNxJ2xLyb
++6jQbzOFEveqxzw9OlT0Lp1ZpcQaSQkJED8jKntRdTp6emB6AtifvZm4QMH
DWEhPLxNTU0clWv0wRGcrIJlatM3sHjdJecc1SR47FiXgIAB3EFocCB7CRc8
1w62Vm5O9uvP4kUGeAaTk5NVFEjwF3vLwOTkZG5uLhjJsJCT3Eh+Z9uyPfW2
yG77XZkoJWfokn41wFzegmcZKwPwZAX4eYOZunPnDvZZCgcGBi7Gx8CFvXr1
qlg1iWDk7du3J/19FMl4+Ash2WpaRKFQWltbo8JD4Up6eXpwd5LMiYG/6p5W
Pn8lINNQg3vd4+YEfjY+JrKtrW2194bj4+NgGCEzVZIjnDkV0N3dzVsxhQyw
cikpKbZWZiTZbebG+qB+sVHh8KjGRUfA1bOzNqftv3D+HK23jxgCjjIiLAQS
TzJeGjwmGHm4OHCJ4JoEHj9maqhL25+VlfX1P/tUIJgD7gOs2c2bN8Hbykhu
hkt67do1sGniM63BmoyNjUHGlJ2dfTroBJi+1NTUvLy8169fC3gvQaEAVA49
sExoaGiwMDHgtxQiBcTwX75gGg4snoCtw959HYEFCE4g+eK3FIILpBXYhyIi
sACBCqfmdxVJiouL3Zzs+S2FSKGnpd7W1sZvKQSXgoIC8elvyRuszIzq6+v5
LYXgkpub6+d9iN9SiBQujnZPnz7ltxSCS2pqaljISX5LIVIcObjv3j1MswmJ
JxfOn0uMjeK3FCJFcOBxLs3VLBqcCvDLyMjgtxQiRVJcNDzI/JZCcPH0cOXG
igbiTE5Ozgnfo/yWQnCxNjd+9uwZv6UQKYqKitydHfgtheCipiQnjGsNCDKt
ra2Gupr8lkJAmZyclJHcDH/5LYhIMTw8TJCRROvYrkhnZ6eqIpnfUogaCwsL
ZLw06ke9IlVVVbZWZvyWQgSxNDUUw9G+WIDcSqiX8hFYvA/tp80ZjmAgIiwk
MTGR31KIIElx0dERYfyWQhDZ6+68ZqPc3Lfhd01VZaVlda96plCXYWwUFhbC
teW3FIKIlroyk1k3IedqTbLVJkrIyMioyckQpSRUzP2KPvBnnJpwQZsyjt9S
CByjo6Oy235nNsyQOvM08UD0rdqP49+zsC91oTbEjfRLG4gJtEdP3zygegZr
uweFQiHISKLu6Ay8ePHC3Fgf+/Hz1PeXHCSIjsn9FLFTuWenlfGK7n+yMuLZ
xsKkurqaa0IJJVeuXAnw817zsIWpkfZnj/NvZV+9mnDEcDPJLraLhXmsRQH2
VC448HhaWhrXhBJKTvgeZb4GKDjToYoIV63fcTicoaGhnbm+LnmTmKvc7Mg/
jdVPa1u61sykcnNzvQ/t54mAQoOJgQ7z+QoWJp8G6vxGsguuG/g+c/LC7Mcs
l41iq3I4ede0vBM2yhvlCDI4qS3b7UKrB5iFdm1tbZpqSjwTUvAZGRnBS29d
4+3q24s7SJvsLv6awvrHjFLiq3JSWwia1qm1vVQqtb/wmAHx/zQDH31bXHUC
TDhMnojDuFapOFBRUWFnbb7GQaP3jin+puga/WqUujj+T1mktQpOfFVODq9+
turrz6ePOpC3dzNO2bN0hFnB3S6O3JjLVEhJiouOPHua+TFwqd9l79MmSEAs
p0SQNPBKyg3SVnK6iDJW2PMqRo9E1El7zcy3picnhpz054WIwsCunTbFxcVY
jpzqb6spf/rs7wFxa45bYrnK0aapBLt3oYHZ+iCNjY2o4xyNiYkJgowkhHP8
FkQ4WNHKtUTp4EmGaR3MrNzs7CyEc+zNtylilJeX21iY8FsKoYGmckSCduzz
cdoeSN6z3TYTNH3XfB/h5elx8+ZN7sso6ESEhcTHRPJbCqHhp5WT3qqw3T7j
xafpxen3t/dDiGsa9WLNFdCuX7+OcVU10cZIT4t7KwSJHqByjeEa5F0RBfEu
oGmQSeG3bdXxSmkbX7sseFXwrdjnyxVJOjs7Fcl4DqyLJ5ZM9L6GZKrpzUfs
yZS1uXFZWRlXpRJw0tPTUU9gXpKYKO5NJbt22oje6r2CTHt7u6oiGeMC9KLH
x48fyXhpNGcyjzEx0BGf5UQZyM7ORgkU70lISAg64ctvKfiD/Q5L5FV5T3d3
twJJVgyHqL9//x5+uNguNchfIITOz8/ntxS8Jj4mMjjwOL+lEFNu377tumsn
v6XgKRQKZbuKQmNjI78FEVMmJibAxXR2dvJbEN5RVFRkYWKAFoDjI2EhJ8+f
O8NvKXjHbhfH69ev81sKsQZiaUUyfnwcw3sy4ae9vR1+LGqO4zv7drtcuXKF
31LwAsgaosJD+S0FYrG2tlZHQ1XkX3B/+vRJjiCDxn0ICA62VpC98uZcELqP
jIx8+sHo6ChvTgqAfTsV4Mez0yGYU1paaqCjwb1FSKHmp0+fxsdEQvQO0ZQ8
EaeuLK+mJAdmR0WBtNfdOTE2qqKigkpdq6sfuwwODsJJ0SpmAgUYOm50FR4Y
GEhISNBQVXR2sE1MTATdhrtPf8DHjx9LSkqS4qJ32ljoaqqlpqZ+/vyZ42JE
hIWI7ds9gaWmpkZTTYmD778gOARFUpIjnA46wWQqLXpaW1sDjx+DIunp6Ry0
eD09PWDixHZVd0HG08OVU5NJgo5ZmxtDhWzMTgy64bprJ1hdTrVRex/aj5ZZ
EUw6Ojog0Fr/4C9wlBChrScfmZ+fz87OhkrWv/xHXV0dBI1okXeBBayBl6fH
emoAfYNbDC6SyTEzMzPDP2A+/gK0RVWRvJ4ptcG5mxrq3r17l+0aENxmYmIC
Yni2+5KVl5cz0TcwWcGBxy1NDQkykmDBlOWJRJyUjYVJWMjJ1d6z07SuoaGB
PXkuJVyAtAWtdiHg1NbWwl1myCuxAFZru4rCigsNQ6JqbqwPBicrK+vly5dL
xm1qagqULS0tzUBHY4el6YoGDcrCU8DGKznQfIgTIHdgtSCC90SEhXi47mLV
OBw5uC82KpxhJ5jNoBO+elrqZWVlTPpvwLn+/PNPSJnDQ4OXe1uwjaz2cAMV
NdLTys3NZakUgl/ATQd/l3YpAXsR8MVgxxi0BfTNxdHOz/sQxjfpIyMjB/ft
3r/HjaEe0B8wdNinnAXdhpNCooo6KQkRHz58APcKTg3j8aCiDANjqVSqu7PD
SX8flqzl7OwsWMvDB/Yy7L9///5uF0eMlaSnp5sY6IyNjWE/L0IQqKmpgQh/
xVyAoc0BwntDXU0G1YIIzc3Jno3QHbQO4jqGhXjA7kGg+O7dO/qdK76iBXsL
uYlY9TsVJfLz8yEDbW9vp98Jd5PBCoEXg7yAfg8E7XDfmTTxUYc7qquq//60
ciPJmzdvoPjQ0BD9zqS4aMhtlz6CEu60sWBwwWBpIWVA/cyFGojAwcPS27rs
7GwZyc3g6WgfwY7JE3EML0Yjz56Oi45YXtvC8zBDRcPkB1f2aG+ESkheN6dX
Gb0N+UJSUhL9HlB17e0qSx/jYyKhBvqhuEVFRaBvYjs4V5S4d++ekhwBMkra
R0hm4V6Dz6W9zAJnBwkp/fFTU1OrmThKdbAuXkZTiWDum15cWZxf8261AJ82
kzb9m1bIBUAMmulrbm7GSW0BMWjTrsJX4MfhpGgpRpHh+fPnEEqFBgf29/cT
ZCThXsMGqeXiD4X0OXKQ4WBweSvWAyqnhd+g4pLciWEUKcSHDD4dMgjIaECl
jfW1aTLAMX19fZ4erqaGuih+EzHAdR47fIB2o5e2P/74Iyo8lGH5kszMzLOn
g1asBFROG7ft6ANM/VUgRLxz5w79ntio8PTkxOiIMAYxwkODxXAMuJjg7uxA
f68hdgITl5eXR3/MmVMBq42ioqmcdyGmkfJplxIYZrlMT0/3PerFoG9oJkzR
Rktdmf52g5O1tTID30p/TODxY6t1I2FJ5TIyMhhGx0DmYmlqyKByEFuy/XMQ
Ag6E9Es3Wk1J7mJ8zMDAQNAJX15auZjIs+/fvw8LOUnGSy+pPRonKKokJyfD
LbYyM4IQbqlBbHksB9aJeSyHUeUgloMT0e+hxXK0/4+Ojl6+fFlHQxVEKikp
YfnHIISBlJSU5a0QLGWs83Wh+kTZwCJMKrdaxkq/Z3Z29vHjxwxmFiHavH37
Fnu7HHZWa5djo1cVQsSgLUWH8e0DdtZ8+4AQZ9h4x8ocLO9YEeJMfX29kZ4W
Q6eR1NTU9fQkYRhUu2JPEoQ4Y21uXF5eTr8HHC6oXNAJX1b7yx318lzeXy4/
P9/d2WH9ciJEhtV6BTs72B4/dhhju9no6KiXp4enh+uKvYJRFxEEA2CalqcM
S2MfwAZiGftw7sypFcc+oBlsEMuBaF9dWX7FAYC0EV5mRnpMRnjZWJgwGeGF
epUjVqSsrExNSQ4i/xWnuF8ax0rESdGPYw0NDmQ+jnXFgYoIBI3i4mKc1JZH
jx4xOYal0foMWQkCsRwwdIpkPEfmJIHg0MHWSuRn+ESsEyM9rQcPHliZGbE9
85KLox1oWl5eHl56K60HJjfkRIgMEK1BEkE/vxzD2/nVoJ9frqmpSY4gs9RX
Ci25hWCCk/2OpWHUYOWWZtGE/0D6yfAaa2kWTfsdljoaqrRZNDs7OyGKo++H
KU/EoaENiNXYv8etoKCAfg9YPNArCMzcnR2WzxW8x80pMTYK0gRavxHQUl1N
NYauv7CZG+ujAQ6IFTnhezQnJ2e1b5nPiD4+Pg5B4HJ9o23gdrksO0IoiYk8
C46S7eKgk2DNwL329vZCAuLhuquurg5s4OPHj+/evcvLefsRwkJWVhan3k/5
+xxhYjARCBqQXe7b7cKRqtyc7IuLizlSFUKEaWpqMjPS40hVRnpaLS0tHKkK
IcIMDw8TZCTXP0MvJLBQDzdWHkGIHgok2fVP5t/T06NIxnNEHoTIY2tltv4e
lZWVlXbW5hyRByHynPT3yczMXGclUEOAnzdH5PkPZloSHBXMwkrm59FMwqID
aMv6m22hhvXr7XIWKLVn9P5N9s6f4da6iAg+UFNTY21uvM5KbCxMoB6OyEMP
UjmRZGxsDC+9dWJigu0apqenIV0dGRnBXmRhYeFr35v6ypLSp2VNXaOrjbRY
Urm5OerXjrqyUmYHI4QIc2P99UyjWl9fb2qoy0KBqeZkRxJRSoJMJmuQt8pI
y5gF5vVTVtAkmsqp7Y2/fUJfmSClTtyCk8HZRT75TEXrLgk3ISf9k5OT2S6e
lpYGNbBQ4Gt5jP/Zgvre7+5y5mvDBQsFnMK58hW6E9NUDie1RXNPTOPg1Dyl
/0mQBgFPDHqMVjMUbgoKCtYz2NnTw3Vp0nU2mO9Id5Ld5JLRsfwrmsoRTIMa
v/y0gfMDOe6Kvyn73Ft+MEKIGBwcJOKkVhzqtSYzMzNkvPTAwACrBWcH39YW
3b11Pfvapf2mspvsk9uWH7M8fVigtMVbbibsiGFDVIRAYWFiwF6DMCSqEAqy
VIRK/Vwb56BNkFBQUDQ1NbUyU5aX2YJR5RYpHzKcNuDMzrAhKkKgiI+JZG+k
TERYyPJFD5lDKffTkpGyOV8xOv3jc3/GbsIG7FYu1mIjaecFNkRFCBSvWpt1
NRVYXS4QjodSLS+bWClE7Uw1I8kaXmr/uVgOtTsZYrmdl34N86F8Hf4y8VPF
KNVh2hIks9CGX0u8zvdneRAltAKfsCQnQgAB5dHXVm5seM5SKTheT1uJVUX9
WrhPVXqby8XmsfnFqQ9/RtvjidJLKjdTHkDC462yun8oHU3lZLdoeyTWD80t
Tnbc91EhympGvkADK0SB+NjI4CDWegiHnDoOpVg+E+Xvm4dU5LZtIJG3yZNV
DiZnhpluc854/+O7yUdHJGVJTreHfrS8zdadN5B0iLmZ4qFAkv1dkbhRFq+0
P6OJ5WWtEQJJT0+XIllqYgLrJPlwpJLctp5u9sYPzgy111aWVbcP/Me8E/Oj
hf7qmwyDSkYZ23on+19VVJTXtg8ym6cCIXTscXe4lXsN48G5N7I93Ow5ev65
jlRzBV2f0s/o5YK4UFH2xMRgO5ZOwlQq1UhfrbIC61LXmKB23g89nFqLFE6M
gETA2kK/sODumkfev5tna2XIA5EQIk95WYmhrgqFwixkmpqa0tVUqKos45lU
CNEGIrRLSbFMDoi7EOG515ln8iBEHkhdVRRkXrU2r/htQ32dqqJMX+8/PJYK
Idrk3/9De7tcXx/jyK/urvcaqsTiIjSdF4LzJF+M09NWon+Z9ay2SlOdnHOV
82McEAgakJaqKuH27naMOBvssstaQ42E7BuC24yPj92/dzs1Of5h4f3JSfbH
RyAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQC8f+e60vf
     "], {{0, 195}, {209, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{245.25, Automatic},
   ImageSizeRaw->{209, 195},
   PlotRange->{{0, 209}, {0, 195}}], ";", 
  RowBox[{"AFD2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"q", ",", "a", ",", "p"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", "b", ",", "r"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "a", ",", "r"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "b", ",", "q"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "a", ",", "r"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "b", ",", "r"}], "}"}]}], "}"}], ",", "q", ",", 
     RowBox[{"{", "r", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQdYFFfXgIn5TdSYaDCWGEv0s2Ehn40AIiBFlN4lGlHpvUOkCdgIIkgT
AVHQCFHpFgSNytIsiEoTI6KgIKCIFEGK4H/cMRs+3GXbzLCL930eeGZ375xz
d+fMuefcuWWWga2myQgBAQHHUfBPc9tvaxwctrlqjYcXOjaO5qY2xkbrbZyM
TY0dRA0+hzeD4K8e/t4fv0MgEAgEAoFAIBAIVuh9293d0zvUtUAgWKehIHWn
m09IRNgu34P51R0DP+558+DO9cL0QGUZ45KhqB4CQYfmcmOV9SllnXDYdcVz
kaL/mwEFejpKr2cXJVpMmKx9ZygqiEB8TH3Rnp+WG1e+pr7ouSr+7ZxjTfTK
vYyaOlm3mNSqIRAMqTz9y4yVDlWd2KsCuW+/9LhOr1xt0PeTtZC/RfAIFXE6
k8UdqruxVwVKgqO2X6FXribo+0nIbhG8QhXFbtZ/LR59yMbyVgsKBlTSK1d/
CMUJCN6h62mGjLjCrUbqi4eHZs3Qfvj+qC3/7JnS5/3KtUZ+P/WXh0NRQwSC
Hj3n9hmq2waX/X1jx6Z1TidLqW8WKoz9TGVfzvvDrpbM6J22ugsFBMYrGTsd
ya4b0toiEP/S+/L+5b9yatre9nuv6czpMx915iIQPM3NM8HnS5DZIviLvueP
nwx8AIFAIBAIBAKBQPAV7e3tDx48yM3NTU9PT0pKSkxMTEhIgOP8/PzS0tI3
b1DAi+AtYmNjN1KxtrZ2dHT08vLy8fGB/97e3tu3b4d37O3t4dNNmzZFRkZ2
dXUNdX0RnzRNTU36+vqLFy8G+ywpKamvr+/ooN/3BbZaV1dXVFR04MCBBQsW
bNmypaqqiuTaIhBlZWXgQsXExP766y8OToezpKSk7OzswJJxrxsCQZfjx48r
KipC7MqlnFOnTikoKBw9ehSXWiEQg2Bubq6lpYVjjApxr4mJydu3b5kXRSA4
AozW09MTd7F79uzR09PDXSwCATg5ORFhtBi+vr5GRkYECUd8siQnJ0NrTqgK
kH/o0CFCVSA+KTo7O8XFxWtqagjV8urVK3l5+adPnxKqBfHp4OHhQY4nDA8P
9/LyIkERYtjT3t4+c+ZM0tT95z//IU0XYhgTGBgYFBREmjrQtX//ftLUIYYr
BgYGd+6QOoN82bJlZKpDDD/q6+vBbhsaGshUKicnBzkamRoRw4ySkhJzc3OS
H2bZ2dllZ2eTqRExzLhx44atrS3JSn///ffTp0+TrBQxnMjJybG3tydZaVhY
2IkTJ0hWihhOZGVlWVtbk6w0IiIiKiqKZKWI4QSFQiE/TkB2i+CSW7duQZZE
slJ3d/fz58+TrBQxnCgvL7e0tCR5RpixsfHt27fJ1IgYZtTV1YHdNjY2kqlU
RUWF5B5jxPDD0NDw/v37pKnr7e1Fz8sQ3OPm5paUlESaukuXLpGfCSKGH1eu
XAGXS5o6LS2te/fukaYOMYyZP38+abrQOEYEXmzdupWzdRLYJSUlxcLCggRF
iE+B7u5ucnKlLVu2oCABgSN6eno3btwgVEVFRcWvv/7a2dlJqBbEJ0VcXJyP
jw+hKqKionbv3k2oCsSnRmtrq5KSUm1tLXEq5s2bh5wtAndCQkLc3NwIEu7i
4hIZGUmQcMQnjpCQ0OvXr3EXW11d/fPPP+MuFoHAyM/PV1ZWxl2sjY1NWloa
7mIRCBo6OjpgvTgKrKqqgsgZRbYIQsnOzlZRUeFeTnt7O/b4WFFRkV9mQfZ0
d/f09A51LRAcAjmUn58fl0ISEhIEBARGjx6tq6uLS62Ipbc+1tdl1/5DIaEB
h9MK6QxHbqvKz8s+5qCkuR+toM67iIqKDv5gq6Ojo6mpCZwqowLa2toCVL75
5ht/f//u7m4CqokbpSFq0k4XqYcNHmqyEQX1A0u0VGRRLvpozFv6Ww7ptUOw
yt27d6F9H7CuwqNHj3bu3Ll8+fIxY8b83z+MHTtWQUHB19d3gAR4X+AfAgIC
SKw7B9RZL/jKMgM77kuyWSX1WwbdcmddVi1zySKxYgi28fLy2rNnD3acm5sr
IyMjwAwLC4vCwkIon5eXh72zbNmyhw8fDun3YIVrayZ8seefmUPnvcRmqR+h
Wy7ZQXzlduRveRpwtrKystevX7e3t+9vnJMnT1ZTU/Pw8PD29nZ3d5eWlh4x
YgTt06+++io1NdXT0xOOoQB/7GXWm7X6m5E0u033lZquRn+6MditiCuyW17n
2bNnNIMcNWoUhKyMnGd+fr6wsHB/887J4aPrW7JhyiinKx9eJDuLLjY+Ra9Y
b4qj2DJnFCfwNHV1dQsXLsSMEGJaVpr7pKSk6dOnY6cQveo+viRsmr0+rBo7
DtBebnW6GA666ssS07L794tlukmJe6OZyDyNvLw8ZoGqqqqs770LLlpQUBA7
kfvONPJoyNBZoxpDKbkU7aq9xecBdVfMJ+c8vxCYcLqFWqCz1N/ZdNXMzwWm
yzruPlz0lP6+mYihZdeuXZjtcdD72tjYOG/ePOz0y5cvE1E9Yui4S/krr+x/
p+RfDIt+NkTVQbBJU1MTZnVjx47lTMK1a9do/Qn41o1UWh8eDElAC/XyCzRn
m5KSwrEQiG8xIY8fP8avaqTS19FU/YLhgxUETwHp2Jw5c8DeJCQk6A2GqQgS
FzBJZy6nra0Ns1tZWVkCqolA/A8UCuWzzz4De9u3bx+9z1m1W0BZWRnkjB8/
HtcKIhB0OH78OBjbiBEjrl69Su9zNuw2JCQERI0ZM6a4uBjPKiIQH2FlZYUN
hmHQ94XZbfqH4FVAPKiCoagLFy5ghf744w/C6ksIXV1dEC/dv3+/jAocPHv2
jPXOQMQgPMlNCI+KiUvJw/fX3Lx5M1jahAkTGHz+3m5p5kp9wdD75uXljR49
GkqHh4fjWkeiKCgo8PX11dDQ0NfXNzU1taJia2sL/83MzDZu3Kirq+vm5sZX
jwJ5i7I/PDbsSOzs6q4+66dhfRxHyXB1wNIEBQUZfD4gTgDHy9Dl5ubmjho1
CqSFhYXhWEPcaW9v379///z583/55Zdjx449fPgQvOurV686OjrAx0JyCgfN
zc3wJnyUkpJiZGQEhb28vF68eDHUdecrWis2iYtF/431LDaYz564A7998+zs
7MDSxo0bx2BIzMd2y9DhZmRkYHECxMy41Q9Xqqur4fuKi4tzsIVlVFSUhIQE
uOXy8nIi6jb86Hh85ad5y65WY3bVFyjztWIgbj/dkSNHwNJGjhzJYPkaNvwt
XFkQ9cUXX1y/fh2v6uFIcHDw2rVrT52iO4SGVdLT09XV1dFm2azQ8iBu1g+i
t55+mEEQrvidhCvng5QaGxuhEWyn0tfXl5mZifWDMdi096P4lnFmpqenh/WD
9fby3KQtiFQtLCwgAOBeVHd3t4eHh4yMDPeihjdtDxPnzVye8+RDO75fftya
nTc5lrZu3bqPBoC/R1JSkl6oAKYqHpRONV7qsC9GSRncC1gJaWlpjutGBG1t
bWBjMTEx+Iq9cOHCihUrIAbGV+ywou6W7OIlJx9hC3S0Of/0lcGpNo6FHTx4
sL+5BgYGGhgYYMfctO/Y0HGA6OXy2EVJSYmglXMgZeO1m5THaIux0jCNyXt/
+Oi4xEK9AjbPhxz50aNHsbGxIiIikFxgWf/nn39OoVDeUR/1Yib33XffcVa/
oqIiTMK8efM4k0AQ5ubmoaGhxMlPSEhQVVUlTj7f8/pB6O7f4xOTIn13x99p
Yf28/Px8X19fIyMjHR0dHx+fpqYmeBO8xOLFi/uPDHd1dcUMz8zMjN2qtba2
/vTTT9jpFy9eZPd04oDQXUFBgWgt0FodPXqUaC18TVNDw+s+lkqCLe3cuROM
E37V6Ojo0tLS/p/evXv3+fPn/d+BXAMbXQO4uLiwVavly5djJ8LdwdaJhAJZ
59q1awldcBID4md5efkBvyeCdXp6esrKyiAYgOslLCx85Aj9OaqMePLkydy5
czELBFNk5Slndnb2xIkTsVMg3eO04oTw559/uru7k6MrJCSE0GhkuFJYWAgx
ALg7fX393bt3//3335zJqaqqmjJlCmaH48ePh1QLPDPdkjk5OdiDNgxwOFxU
nxDg18jLyyNH1/3793V1dQesPoEYBH9/f2jftbS0wM1CcsS9wOrqaklJSZpB
gvWuWLFi8+bN4eHhERER+/bt09TUXLBgwZgxY2hlvL29ea3DFpoeMTExMjXK
yMhguQPvA24N3E58fDy0EcHBwSdOnIB2k+hVL8BCIBiAREBNTQ0s9uDBg0Ro
SU9Pp4W7jPj6668lJCQqKyuJqACXFBQUkBxs7927l8sncSSQnJwM7YKJiYmV
lRV4PLCimJgYqLmjoyO8Cd4JbBh3pY8fP/bw8ADhhoaGvr6+jFpwHElNTbW0
tFy1atW4ceNo5jp16lQVFRX4prdu3SK6AhwD1+LkyZNkaszNzTU2NiZTI1tA
2ggNENQQ/CrdRd4gu4RoEy6riIhITU0NLkqhjYY8S1paOi4urry8nOQ1YeBr
wrcuLS0Fo01LS2tpaYFWmMwKcAAEThwH+ZwBaSzJkQnrREdHg/2wuCkzRJsr
V66MiqK/gA9TwE7Ajf/6669CQkIQVQ75+kXYmBlInIe2GiyipKRUV1dHstIl
S5aQrJEVAgMD4S5mK2eEexCaVLY6pRsaGvbs2aOhoQHhGZgr77TFcPuA3c6a
NWuoK8ISENvgMoSGLWbMmEGyRqacPXtWUVGRM6e3du3a06dPD16ms7MzKSkJ
/LOoqOjhw4chqeepdeahzaXFtyT05HPPkCzj8MMPP5CvdBCampoWL17M8ekv
XrwA06U7cKi4uDg2NhZcq5SUFITEr17x6JoT2Bw0jG3btg11dZgDWTPJ8S1k
AeLi4mRqZIqBgUFGBv11fVkkMjLS1dWV9rK1tTUoKEhOTs7Q0BCCAV4bQDWA
3t5eJycnCQmJqVOnQurBF3YLFT5//jyZGiGd2bBhA5kaBwfqo6+v39fH2rAA
xsyfP7+trS09PV1BQQGSuwMHDoAb5/3EnMbr16/h/iU/2eEMyClITiGTk5N3
7dpFpsbB8ff3P3ToEPdy/vzzT0FBQWdn5wcPHnAvjTA6igqKmul+0NFhampa
X//RPgg8yb1797S1tcnUaGtre+HCBTI1Ds7WrVsZPj+toM0CYL4yBlx3aGpx
rx5udL8+e9g3wNtw0SI9ulEL+FsTExN+8beQ1crLy3PfSrIOqGtsbGRejgDc
3d3BKw54mgDGxuDhe7rJPzOtBp91RUNdXZ2XR7u97+B7FjbpO4Vr9D4Fu4Vb
mF/sFrC0tCRtXA3kgBBMDlXUh+1kNHbs2C1btkAginUArlixgvmZrK1FZG1t
zTv9sfSpjZw+SekmPS/FX/72HXVsIWkbWycmJnp7e3Mvp7KyUkZGBtKfpSwj
KirafycjYMqUKXPmzBlkL8V+YQIrkcI7CG7x3kjx7dW0+IKqVtzk1UTMmKw8
DOIEICsry9zcnBxdbm5uYLq4iOJgZJ2amhptpJOUlFR8fHxDQ4OkpCT90v0X
wGDN39rZ2eHXcnXdTgp1trNZNH1OAOUpTjLfvXsR+f2kdcMjTgDg2pEQmL15
8wYUDWHXkK6urpiYmL+/f/8RCOCK6ZfuZ7fURd+Y262BgQHenQmdZquF9+fg
9wCrJmL6JEW6ky75zt8CsbGxO3bsIFpLTEwMCVoG4cmTJ3B1BrypqanJaFWo
fmsUBpmwYLf4z1nuajRYJRyci5/dtsRMm6BKdw1QfrRb4McffyRaxdy5c8ns
uGARuJVSU1O5l1NSUjJt2rSMjIyqqirupX2gq9FMbHEgBY/Rkm87Lke7G+mu
FxGR0NY32p8+8F7gxzjhHXU0FG0TTCI4cuSIo6MjcfI55syZM+zOb6WLtrb2
4cOH4S7Ytm2bvr5+aGhoczPdDn52AH8rviQgm4yBLnzqb1taWtatW/fy5Usi
hENkq6GhwZszPtrb25WUlFpbucrZa2pqaIMu4Je8fft2QEDA8uXLFRQUzp49
y7ncvlZjyf8evEHG4pZgt8bGxnxnt4Cfnx9Bs5ng2tnY2BAhGReSkpIgyuVG
grq6em5u7sfvV1RUWFpaLlq0yM7ODrRAgM26zPbn1Xco52RnfmcclPSgopbo
UY98Gie8o85AWbZsGREzNyGL5/H1wTZv3hwdHc3ZuUFBQdbW1oMUgJ/0woUL
Xl5eED9oaWkdPXqUlU6Vpoe3Uk/FRYUfjDx24tLVYs7XC2MNPo0TMA4dOmRv
b4+7TAcHB3xl4k5XV5ecnFxycjK7J0IiBndld3c3K4UhhCgvL8fWmYHAia6L
Hir4N07AEBUVvXmT80UsaZw7dw7+19bWcjMkm0zAqCAcjYiIYP2Uffv2cTxX
rqioCJy8lJQU3NSpqalshRBEwL9xAsb9+/chQeN+mt7ChQsFBQVXr15dWFiI
S8VIoKOjA5obZWVlpnducXGxrKysh4cHl3uyQFaYmZm5Y8cOPT09uGtw6ZHj
DPjuECfwyzhGuvz2228cLI/fn8ePH0+bNg3rtOf9IGEA4AnBhOTl5dPS0sD/
QNjfQQUc8vPnzyGWgJsRbm1854mA/T969AjSNyEhIQMDgxs3btCdBU8cL1++
BL14dj4PBcLCwoOsKgNpRScVRvlFYmJi/xEsDHZ842kgEHVyclq/fv2GDRsM
qejq6srIyGzfvp3oiws/18aNG1VVVV1cXBISEvBapeFj4GaEK7V3715nZ2cz
MzMIuU1NTV1dXQMCAricuMSUvtc1+ZSsvNybNWysmcoccJgiIiID3oTGEZJu
aNTMzc2hTYFLCXk0tJWQIA94Lm9ra4tZ7Jo1a/h3G2IMcLN1VEh2gM3NzefP
n/f29lZRUQH3jvtge2gHJSUl3d3d4da4du1aZWUlxNjw/9KlSzExMTY2NqtW
rWI6T5lTnvjbWsSeLyjOPefhurusCc/14jw9PcG3YMdge3AzgsMJDQ09e/Ys
GDD4HGjX4ADyr8DAQIgJ1dTUsKiettRqcHAwWsIOF8D5W1hYzJ49GxxjXl4e
lwusQcYByTIY5+BXB24cY2NjuGsgUuJG3cdURquLGf6BPfJP89aUccN38Oe7
TZs2ZWdnQ9YsKip65w6TLbUgl8EWZb179+6IESNKSkrwrQwCAAeor68PUQTE
MPHx8RxMbI+MjITQnfXgHIJ8cLz4TkkOWTtexe+DORXHmHy50gNH4e+os88m
TZrk4+PDYnm4f+H3nDhxIm/ubzVsgPQwPT3dy8sLLAr84cfpA6MRbnFxcRCi
s9jbTAP889KlS/Hrqeu2WzZaK6QMe1EeZyMw4xecJL+nt7dXW1ubg5Xt/fz8
wCfgWBPEIECotnXr1h9//BHyKQqFgoUQ27ZtW7RoUUNDQ/+SFy9elJKS4kzL
s2fPIPbjvrZUut1//lon9MPC/g/iLQTmGuAk+T2QfHG8Devu3bvd3NxwrAyC
KSdPnoRMGSx2586d3377LeQX06ZNo80b6unpAc88YBsIduXjtZDmYc0pcrs+
bOV8M2LjuNUBuIgFbt26JSsry/Hp4KshJK6oYDoFFoEzECGA06D1QI4cORJb
qjclJcXOzo5L4RBX4/IUqTbZdKmyH9Y7E2suvzEYt6hy/vz5zJ8EDbaV6/ut
BIZk8TGEg4MDZrSQHWMHkpKSEDYw6cdjYbGI5ORkWhcTl6QHWjkFxJ+O8rba
FTdwCgqnJCQkQHrFgu7B7BaAKPfy5cs4VQrBEpAaZ2ZmHjlyBJp18LGpqalp
aWkQPKxfv37Q897PSfrnYv67cMQAWlpacNygpP3F47+f4Tne28rKKicnh3k5
ZnZ77tw53EeXITjA39+fyVC3/pOXB0VaWnpAujckfFyH1tZWU1NThg+5/m1N
qJMFB7VbiG+NjIzY7XVB4I6cnByTnl5mLojGrl27CHuIxgZCQkLjxo3bu3dv
cXExNmmxtrYW0kYGxtZ/wSHqbNdBv2xzc7O5ufmQj9BDgN0yWZ2bZX8LftvS
0vL69etXrlyhUChXr17FDrKysuAgiwp2AG/CARTof3CVyoCD/qL6S8AOBkiA
g7t37y5ZsgTznl9++aWysrKnp6evry/ECfQrPWD5C2Y3KdwIIOrevXss/B4I
AlFUVGSWZbMU3wKXLl2CEBfCP7iy1lTYOqALu6JcXV0nTZo0YNeqhQsXMgxK
B9yVLDQuoAU98B1yIChl3jvUPwJkfFGPHz/OCzt+rly5Eiq6YMECMLDy8vJ3
1KmpDLuX2fS3PT090KZgYhFDiKqqanV1NS6iHBwceGEZ2KCgoDNnzvR/nA1f
EOz243VdqPRrTbDbc1C7BbH8PoR+eBAQEMDuJtSMEBMT43LOPkFg604z3M3z
39bEJB2OB7Vb8LRwC/DgGjWfGuCL1qxZw72cqqoqklf5ZguIb8EJcy8nLi4O
l1VDEdwjJyfH/cSiyMhILidwEUpeXh4ut5W4uDgaosAjUCgUHR0dbiR0dXWp
q6vz9u4V702Oy3wKonctLS286oPgHgMDAw4WiKDh7Ozs7++PY32IoKmpaenS
pRw/6mpsbBQWFsa3SggugShXSEiIs5lTaWlpHI/dJZnQ0FAjIyPOztXU1ITg
Ft/6ILgHTHfBggXsBm9wKRmuys6TuLi4mJmZsXuWhoYGL0fvnziFhYVr164N
Dw9npXBfX5+np6eenh5BC3USh7e3N1SbxVS0qKgIjPbAgQNE1wrBDWCEJiYm
IiIig1/WEydOQFwBMS0RSx2SwLlz5yBYHXxxY/hq9vb2K1aswHtDGQRRVFZW
guNdvXr13r17U1JSKBRKbm5uTk5ObGysg4PDnDlz4D8f7dPKiGPHjs2ePVtX
V/fgwYOZmZl5eXlgohcvXgwLC9PR0YGoCQW0/MjTp08TEhJ8fHysra3BUO3s
7Pz8/DIyMhg8MOVXIDoCQ3V0dLSnAl/z8OHDaOQMAoFAIBAIBAKBQCAQCAQC
wTH/D399IYQ=
     "], {{0, 144}, {232, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{241., Automatic},
   ImageSizeRaw->{232, 144},
   PlotRange->{{0, 232}, {0, 144}}], ";", 
  RowBox[{"AFD3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", "0", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1", ",", "c"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "0", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "1", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", "b"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "0", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "0", ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "1", ",", "d"}], "}"}]}], "}"}], ",", "a", ",", 
     RowBox[{"{", "b", "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7289751134126444`*^9, 3.728975204772472*^9}, 
   3.7289753600232353`*^9, {3.728975394461012*^9, 3.7289754265236063`*^9}, {
   3.728975796275551*^9, 3.728975796744258*^9}, 3.731681772855386*^9, {
   3.7316818647658296`*^9, 3.7316818659416885`*^9}, {3.7316819225424643`*^9, 
   3.731681938782753*^9}, {3.731682171810932*^9, 3.7316822873299303`*^9}, {
   3.731682401584256*^9, 3.7316825255661516`*^9}, 3.7316826314375973`*^9, 
   3.7316827279584947`*^9, {3.7316827663580294`*^9, 3.7316828579443407`*^9}, 
   3.7316830680983906`*^9, {3.7316831344531403`*^9, 3.731683177742362*^9}, {
   3.731683315158889*^9, 3.7316833255369053`*^9}, {3.7316834719163523`*^9, 
   3.7316834796028433`*^9}, {3.7317318805302877`*^9, 3.731731884217826*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"7ec7acf2-80d0-4274-adde-0cddc5b78539"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ejercicio1", "[", "AFD1", "]"}]], "Input",
 CellChangeTimes->{{3.7289754370393214`*^9, 3.7289754950865173`*^9}, {
  3.7289755549461184`*^9, 3.728975563305644*^9}, {3.7316830235640526`*^9, 
  3.7316830643611174`*^9}, {3.7316834065566835`*^9, 3.7316834445939474`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"72dc5a55-6efb-4c2d-a580-a2ec98f7a42f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "a", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "b", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "a", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "b", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "a", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "b", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7316834452160506`*^9},ExpressionUUID->"d18712fc-4314-4e82-a868-\
70098657309c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ejercicio1", "[", "AFD2", "]"}]], "Input",
 CellChangeTimes->{{3.7289756079620667`*^9, 3.728975619774635*^9}, 
   3.731683410170977*^9, 3.7316834508146667`*^9},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"51077764-943d-4371-afd2-319a57381dfb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "p", ",", "q", ",", "r"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "r", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7316834514074793`*^9},ExpressionUUID->"34d1b13c-bd29-4930-97df-\
6c901b4d7412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ejercicio1", "[", "AFD3", "]"}]], "Input",
 CellChangeTimes->{{3.7289757414627504`*^9, 3.7289757628065977`*^9}, 
   3.7316834202120223`*^9, 3.7316834574494877`*^9},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"5aa38c19-a834-42eb-8a39-c05a93001608"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "a", ",", "b", ",", "c", ",", "d"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "d", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "d", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "b", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7316834586643577`*^9},ExpressionUUID->"8468590e-435a-4b5b-965d-\
3e356f3dd231"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2", "Section",
 CellChangeTimes->{{3.7289758600883923`*^9, 
  3.728975863463356*^9}},ExpressionUUID->"406273de-e0aa-4276-bc3a-\
bf347acc25a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CompruebaCadena", "[", 
    RowBox[{"cadena_List", ",", "AC_List", ",", "frontera_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", "i", ",", "j", ",", "aux"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", " ", "=", " ", "cadena"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"FirstCase", "[", 
        RowBox[{
         RowBox[{"AC", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"frontera", ",", 
            RowBox[{"cadena", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "elem_"}], "}"}], "\[Rule]",
           "elem"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "res", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", " ", 
          RowBox[{"FirstCase", "[", 
           RowBox[{
            RowBox[{"AC", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
               RowBox[{"res", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "elem_"}], "}"}], 
             "\[Rule]", "elem"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"AC", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"res", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "cadena", "]"}], "]"}], "]"}]}], "]"}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7289759141511536`*^9, {3.731683585149151*^9, 3.7316835941648264`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"ff61b0f8-cf75-4e05-b00c-4e84952c7513"],

Cell[CellGroupData[{

Cell["Comprobaciones", "Subsection",
 CellChangeTimes->{{3.728976019823617*^9, 
  3.728976023276747*^9}},ExpressionUUID->"0ce1949b-44a0-429f-91db-\
178bfc1f9323"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AC1", " ", "=", " ", 
   RowBox[{"Ejercicio1", "[", "AFD1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AC2", " ", "=", " ", 
   RowBox[{"Ejercicio1", "[", "AFD2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AC3", " ", "=", " ", 
   RowBox[{"Ejercicio1", "[", "AFD3", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.728976058198781*^9, 3.7289760873551807`*^9}, 
   3.731683669604553*^9, {3.731683791595312*^9, 3.7316838326950936`*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"e779cd73-11f7-4905-b8b1-3b7a6d87ac8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompruebaCadena", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "b", ",", "b"}], "}"}], ",", "AC1", ",", 
   "0"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.7316839692121124`*^9, 3.731684004824602*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"dedcd6f5-2b67-4d7a-b8ae-76e5d47126fd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 3.7316840076703186`*^9, 
   3.731731445069974*^9},ExpressionUUID->"a669e457-db9d-4ffd-90fb-\
bb137567cc14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompruebaCadena", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a"}], "}"}], ",", "AC1", 
   ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.731683972710233*^9, 3.731683986034514*^9}, {
   3.73168401661662*^9, 3.7316840188803144`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"65e5841b-e51e-43df-a915-04f9860131cb"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 
   3.7316840199193935`*^9},ExpressionUUID->"6d9ff3be-0a8f-441c-80ea-\
d1c440c9f906"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompruebaCadena", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a", ",", "a", ",", "b"}], "}"}], ",", "AC2", 
   ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"1d591641-5f6d-46e8-a7a5-eaddcad3570a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 
   3.731731450035795*^9},ExpressionUUID->"95611eca-4b01-4fda-8454-\
500947573f9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompruebaCadena", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a", ",", "b"}], "}"}], ",", "AC2", ",", 
   "q"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.7316839224590883`*^9, 3.7316839230508347`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"45e77171-3664-40cf-93bf-747687a2072b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 
   3.7316839268301716`*^9},ExpressionUUID->"d8f64e79-b756-4fd8-a99f-\
9c0c18c5dee1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompruebaCadena", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "AC3", 
   ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.7316839493888626`*^9, 
   3.7316839495128484`*^9}, {3.731684033423338*^9, 3.73168405797029*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"307b2644-fe98-447b-9e98-19825f81fb5e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 
   3.731684076900033*^9},ExpressionUUID->"24e87484-2a1e-479f-86b3-\
5f3322f46340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompruebaCadena", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "AC3", ",", 
   "a"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.731683951846874*^9, 3.7316839519289417`*^9}, {
   3.7316840370083256`*^9, 3.7316840374184866`*^9}, {3.7316840701793303`*^9, 
   3.731684073033864*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"a90e4e1f-1e7e-4fb8-993a-e2848d0fd8d0"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 
   3.731684074093429*^9},ExpressionUUID->"d06edaf0-a867-4f2b-9b8c-\
79bff019653c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3", "Section",
 CellChangeTimes->{{3.7289762677780457`*^9, 
  3.7289762710749054`*^9}},ExpressionUUID->"25965ef5-a75b-44fe-b275-\
338308a84af5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ejercicio3", "[", "AFD_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vecindario", ",", "estados", ",", "res"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"estados", "=", 
      RowBox[{"Union", "[", 
       RowBox[{
        RowBox[{"AFD", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"AFD", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vecindario", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{"estados", ",", "4"}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"e1_", ",", "e2_", ",", "e3_", ",", "e4_"}], "}"}], "/;", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"AFD", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"e1", ",", "e2", ",", "e4"}], "}"}]}], "]"}]}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"vecindario", " ", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"vecindario", ",", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"AFD", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "4"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"_", ",", "e2_", ",", "_", ",", "e2_"}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vecindario", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"vecindario", ",", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"AFD", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "4"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"_", ",", "e2_", ",", "_", ",", "e2_"}], "}"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"estados", ",", "vecindario", ",", 
       RowBox[{"AFD", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.7289763579972115`*^9, {3.729052437323183*^9, 3.729052456370124*^9}, {
   3.7316841956533966`*^9, 3.7316842020890446`*^9}, {3.7317313694652653`*^9, 
   3.731731400215319*^9}, {3.731731491867109*^9, 3.7317315017421713`*^9}, {
   3.7317327937534637`*^9, 3.731732831472435*^9}, {3.7317328621757455`*^9, 
   3.731732936957382*^9}, {3.731733067864262*^9, 3.7317330686611586`*^9}, {
   3.731733113692632*^9, 3.7317331346769943`*^9}, {3.7332021655599966`*^9, 
   3.7332021741581926`*^9}, 
   3.7332026700062695`*^9},ExpressionUUID->"fdcdc381-f0b2-4935-908b-\
cd7e5b4e9364"],

Cell[CellGroupData[{

Cell["Comprobaciones", "Subsection",
 CellChangeTimes->{{3.728976479013561*^9, 
  3.7289764826698112`*^9}},ExpressionUUID->"6974fe81-7a97-4561-8d05-\
a9d92f83c72d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AFD1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "a", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "b", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "a", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "b", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "a", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "b", ",", "2"}], "}"}]}], "}"}], ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Ejercicio3", "[", "AFD1", "]"}]}], "Input",
 CellChangeTimes->{
  3.728976670233302*^9, {3.7289767407024555`*^9, 3.7289767805776625`*^9}, {
   3.7316845417982736`*^9, 3.7316845514818954`*^9}, {3.7317314795213346`*^9, 
   3.73173148241196*^9}, {3.73173154161246*^9, 3.7317315543302784`*^9}, {
   3.731731587264083*^9, 3.731731600934038*^9}, {3.7317316492672873`*^9, 
   3.7317317221905103`*^9}, {3.731732702206168*^9, 3.7317327173469086`*^9}, {
   3.731733178114735*^9, 3.73173317848979*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"69d28875-8796-4e00-8d0a-26b4d381abd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "a", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "a", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "a", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "b", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "b", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "b", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "a", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "a", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "a", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "b", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "b", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "b", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "a", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "a", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "a", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "b", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "b", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "b", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7289767604212313`*^9, 3.7289767825151176`*^9}, 
   3.7290524757919755`*^9, {3.731684554994609*^9, 3.7316845826607723`*^9}, {
   3.731731459682387*^9, 3.7317315064697237`*^9}, 3.7317315506173983`*^9, 
   3.731732950347974*^9, {3.731733163302165*^9, 3.7317331796303263`*^9}, 
   3.7332022707958856`*^9},ExpressionUUID->"533aedc6-3aea-4d0b-94f7-\
0a92ba43abbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ejercicio3", "[", "AFD2", "]"}]], "Input",
 CellChangeTimes->{
  3.7289767998746448`*^9, {3.7289768301560097`*^9, 3.7289768370154495`*^9}, {
   3.7316845635405397`*^9, 3.7316845714839206`*^9}, {3.731733186458555*^9, 
   3.731733187739809*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"a28e9503-a147-43ad-b1c5-0d3fdf1e6775"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "p", ",", "q", ",", "r"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "p", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "q", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "a", ",", "r", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "p", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "q", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "b", ",", "r", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "p", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "q", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "a", ",", "r", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "p", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "q", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "b", ",", "r", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "p", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "q", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "a", ",", "r", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "p", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "q", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "b", ",", "r", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "p", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "q", ",", "r", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "q", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "p", ",", "r", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "r", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "p", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "r", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "q", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "p", ",", "r", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "r", ",", "r", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "q", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "p", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "q", ",", "r", ",", "q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "q", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "p", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "p", ",", "r", ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "p", ",", "r"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "r", ",", "r", ",", "r"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "r", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7289768122183886`*^9, 3.72897683865604*^9}, 
   3.7290524822765017`*^9, 3.731684572762298*^9, 3.7316846194978075`*^9, 
   3.7317331893178864`*^9},ExpressionUUID->"46405c08-358d-40a1-9e43-\
63594f5d1a65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ejercicio3", "[", "AFD3", "]"}]], "Input",
 CellChangeTimes->{
  3.7289768260622*^9, {3.7289768848749638`*^9, 3.7289769022657347`*^9}, {
   3.7316846419763737`*^9, 3.7316846559114513`*^9}, {3.7317331937711444`*^9, 
   3.731733197239931*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"5f4138e7-6fe1-4f9b-a7bd-682dd7915f58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "a", ",", "b", ",", "c", ",", "d"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "a", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "b", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "c", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "d", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "a", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "b", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "c", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "1", ",", "d", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "a", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "b", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "c", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "d", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "a", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "b", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "c", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "d", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "a", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "b", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "c", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "d", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "a", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "b", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "c", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "1", ",", "d", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "a", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "b", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "c", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "d", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "a", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "b", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "c", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "d", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "a", ",", "d", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "d", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c", ",", "a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c", ",", "c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c", ",", "d", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "d", ",", "a", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "d", ",", "b", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "d", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "d", ",", "d", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a", ",", "d", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "c", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "d", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c", ",", "a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c", ",", "c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "c", ",", "d", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "d", ",", "a", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "d", ",", "b", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "d", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "d", ",", "d", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a", ",", "c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "a", ",", "d", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "b", ",", "c", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "b", ",", "d", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "c", ",", "a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "c", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "c", ",", "c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "c", ",", "d", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "a", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "b", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "d", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "a", ",", "a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "a", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "a", ",", "c", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "a", ",", "d", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "b", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "b", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "b", ",", "c", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "b", ",", "d", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "c", ",", "a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "c", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "c", ",", "c", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "c", ",", "d", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d", ",", "a", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d", ",", "b", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d", ",", "d", ",", "d"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "b", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7289769033439293`*^9, 3.729052486510829*^9, 
  3.731684665303628*^9, 
  3.731733197911699*^9},ExpressionUUID->"60d063d8-faa0-4fa2-a7b6-\
5792db8d2432"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 4", "Section",
 CellChangeTimes->{{3.7289769284377456`*^9, 
  3.728976935984707*^9}},ExpressionUUID->"ef9a3fd2-7d2d-4317-8995-\
5b76c058c7dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DibujaDiagramaTemporal", "[", 
    RowBox[{"cadena_List", ",", "AC_List", ",", "frontera_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "res", ",", "i", ",", "j", ",", "aux", ",", "diagramaTemporal", ",", 
       "colorRules", ",", "l"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"colorRules", "=", 
       RowBox[{"GetColorRulesForAutomata", "[", "AC", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", " ", "=", " ", "cadena"}], ";", "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"diagramaTemporal", "=", 
       RowBox[{"{", 
        RowBox[{"{", "cadena", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", 
       RowBox[{"FirstCase", "[", 
        RowBox[{
         RowBox[{"AC", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"frontera", ",", 
            RowBox[{"cadena", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "elem_"}], "}"}], "\[Rule]",
           "elem"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"diagramaTemporal", ",", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"Last", "[", "diagramaTemporal", "]"}], ",", "res"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "res", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", " ", 
          RowBox[{"FirstCase", "[", 
           RowBox[{
            RowBox[{"AC", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
               RowBox[{"res", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "elem_"}], "}"}], 
             "\[Rule]", "elem"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"diagramaTemporal", ",", 
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Last", "[", "diagramaTemporal", "]"}], ",", "res"}], 
            "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "diagramaTemporal", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"l", ",", "\[IndentingNewLine]", 
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{"diagramaTemporal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", "All"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
            RowBox[{"DataReversed", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Framed", "[", 
                   RowBox[{"#1", ",", 
                    RowBox[{"Background", "\[Rule]", "Green"}]}], "]"}], ",", 
                  RowBox[{"#2", "-", 
                   RowBox[{"1", "/", "2"}]}]}], "]"}], "&"}], ",", 
               RowBox[{"Transpose", "@", 
                RowBox[{"diagramaTemporal", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Epilog", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"MapIndexed", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"#2", "-", 
                    RowBox[{"1", "/", "2"}]}], "]"}]}], "]"}], "&"}], ",", 
                   RowBox[{"Reverse", "[", "mat", "]"}], ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], ","}], "*)"}],
             "\[IndentingNewLine]", 
            RowBox[{"ColorRules", "\[Rule]", "colorRules"}], ",", 
            RowBox[{"Mesh", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
           "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"ListAnimate", "[", "l", "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728977033391492*^9, 3.7289770616884155`*^9}, {
   3.731684917809415*^9, 3.7316849227166843`*^9}, {3.7316852835050693`*^9, 
   3.731685315642891*^9}, {3.731689274086764*^9, 3.73168929127434*^9}, {
   3.731689442267065*^9, 3.7316894446606174`*^9}, {3.731689842479456*^9, 
   3.7316898642607994`*^9}, {3.731689967558055*^9, 3.7316899845581117`*^9}, {
   3.7316900239957123`*^9, 3.731690030464526*^9}, {3.7316900842146826`*^9, 
   3.7316901074022903`*^9}, {3.731690431059717*^9, 3.7316904539818306`*^9}, {
   3.73169051636771*^9, 3.731690528520027*^9}, 3.7316906144802685`*^9, {
   3.7316907439553595`*^9, 3.7316908037387767`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"cddbb836-d379-4dd3-be42-354cba97f843"],

Cell[CellGroupData[{

Cell["FUNCI\[CapitalOAcute]N AUXILIAR", "Subsection",
 CellChangeTimes->{{3.7316850593675733`*^9, 
  3.731685069637128*^9}},ExpressionUUID->"28d2520c-0d9a-43cb-b689-\
1fbbfa265fee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetColorRulesForAutomata", "[", "automata_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"numEstados", ",", "incremento", ",", "l", ",", "rgb"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"numEstados", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"automata", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"incremento", " ", "=", 
       RowBox[{"1", " ", "/", " ", 
        RowBox[{"Round", "[", 
         RowBox[{"(", 
          RowBox[{"numEstados", "/", "3"}], ")"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rgb", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "numEstados"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"rgb", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"i", ",", "3"}], "]"}], "+", "1"}], "]"}], "]"}], "+=", 
          "incremento"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"l", ",", 
           RowBox[{
            RowBox[{"automata", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "i"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"RGBColor", "[", "rgb", "]"}]}]}], " ", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "l", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.728977183032846*^9, {3.728977214298695*^9, 3.7289773347367687`*^9}, {
   3.7316851202378607`*^9, 3.7316851237506175`*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"3766d985-8687-409f-89c0-04949b0cc6b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comprobaciones", "Subsection",
 CellChangeTimes->{{3.7289770835323763`*^9, 
  3.728977088376029*^9}},ExpressionUUID->"1d0dfe63-0352-48b5-9c60-\
45a62757d856"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DibujaDiagramaTemporal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a", ",", "a", ",", "b"}], "}"}], ",", "AC2", 
   ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728977183032846*^9, {3.728977214298695*^9, 3.7289773347367687`*^9}, {
   3.731685184170739*^9, 3.73168524429985*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"233c5968-68b7-4f0e-91e2-0472719f4aec"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i38$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i38$$ = 1}, 
     "\"max\"" :> {$CellContext`i38$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i38$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i38$31407$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i38$$], {1, 6, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->2339.4803414344788`,
                  AnimationRunning->False,
                  AnimationTimeIndex->4.48034143447876,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.}, {0., 0.5, 0.5}}}, {{0, 0}, {5, 1}}, {
                    0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}, {{5, 0}, {5, 
                    1}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.}, {0., 0.5, 0.5}}, {{0.5, 0.5, 0.5}, {
                    0., 0.5, 0.5}, {0., 0.5, 0.}, {0., 0.5, 0.}, {0., 0.5, 
                    0.5}}}, {{0, 0}, {5, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 2}, {5, 2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}, {{3, 0}, {3, 2}}, {{4, 0}, {4, 2}}, {{5, 0}, {5, 
                    2}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAAYVYojQoe2GMIoYijyxNST8gcXPRA2QujP1DdXgCv0R7u

                    "], {{0, 0}, {5, 3}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 3}, {5, 3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 
                    1}}, {{0, 0}, {5, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 3}}, {{1, 0}, {1, 3}}, {{2, 0}, {2, 
                    3}}, {{3, 0}, {3, 3}}, {{4, 0}, {4, 3}}, {{5, 0}, {5, 
                    3}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIAaxUcEDewwhFHF0eULqCZmDix4oe2H0h0FiL7Hh
g9teAKN3LHM=
                    "], {{0, 0}, {5, 4}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 4}, {5, 4}}, {{0, 3}, {5, 3}}, {{0, 2}, {5, 
                    2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}, {{5, 0}, {5, 
                    4}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGxU8sMcQQhFHlyeknpA5uOiBshdGfxgk9hIbPvSy
F139BxzueWAPAD3UPFY=
                    "], {{0, 0}, {5, 5}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 5}, {5, 5}}, {{0, 4}, {5, 4}}, {{0, 3}, {5, 
                    3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 5}}, {{1, 0}, {1, 5}}, {{2, 0}, {2, 
                    5}}, {{3, 0}, {3, 5}}, {{4, 0}, {4, 5}}, {{5, 0}, {5, 
                    5}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "r", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[9, 2]}, {4.5, 4.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 6->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIAaxUcEDewwhFHF0eULqCZmDix4oe2H0h0FiL7Hh
Qy970dV/wOEeetmLKQ4AYClNeA==
                    "], {{0, 0}, {5, 6}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 6}, {5, 6}}, {{0, 5}, {5, 5}}, {{0, 4}, {5, 
                    4}}, {{0, 3}, {5, 3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 
                    1}}, {{0, 0}, {5, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 6}}, {{1, 0}, {1, 6}}, {{2, 0}, {2, 
                    6}}, {{3, 0}, {3, 6}}, {{4, 0}, {4, 6}}, {{5, 0}, {5, 
                    6}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[11, 2]}, {0.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[11, 2]}, {1.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[11, 2]}, {2.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "r", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "r", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[11, 2]}, {3.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[9, 2]}, {4.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "r", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[11, 2]}, {4.5, 5.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}, {5.5, 
                    FormBox["6", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}, {5.5, 
                    FormBox["6", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
                Dynamic[$CellContext`i38$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i38$$, \
$CellContext`i38$31407$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 6, 1}, 6, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{437., {241.75, 248.75}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.731685246927819*^9, {3.731685299135028*^9, 3.7316853216038456`*^9}, {
   3.7316893104443007`*^9, 3.7316893229287205`*^9}, {3.7316893604454803`*^9, 
   3.7316893924299636`*^9}, 3.7316894501440086`*^9, 3.7316895070504637`*^9, 
   3.7316895450301075`*^9, {3.731689857807645*^9, 3.7316898704483232`*^9}, 
   3.731689990464381*^9, 3.731690034370803*^9, 3.73169011276169*^9, 
   3.7316905349878225`*^9, 3.731690620434426*^9, {3.7316907871899033`*^9, 
   3.731690808946805*^9}},ExpressionUUID->"0e5d46a2-5992-402d-a7c4-\
7b557e197a1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DibujaDiagramaTemporal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "b", ",", "b"}], "}"}], ",", "AC1", ",", 
   "0"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.7316839692121124`*^9, 3.731684004824602*^9}, {
   3.731685746768417*^9, 3.731685749580971*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"b46edfbf-5339-4afe-9838-cd2a7be6806a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i39$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i39$$ = 1}, 
     "\"max\"" :> {$CellContext`i39$$ = 5}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i39$$], 1, ""}, 1, 5, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i39$32488$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i39$$], {1, 5, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->2346.8085265159607`,
                  AnimationRunning->False,
                  AnimationTimeIndex->0.,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0.5, 1., 0.5}, {0.5, 1., 0.5}, {0.5, 1., 
                    1.}, {0.5, 1., 1.}}}, {{0, 0}, {4, 1}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0.5, 1., 0.5}, {0.5, 1., 0.5}, {0.5, 1., 
                    1.}, {0.5, 1., 1.}}, {{0., 0.5, 0.}, {0.5, 1., 0.5}, {0.5,
                     1., 1.}, {0.5, 1., 1.}}}, {{0, 0}, {4, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}, {{3, 0}, {3, 2}}, {{4, 0}, {4, 2}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0.5, 1., 0.5}, {0.5, 1., 0.5}, {0.5, 1., 
                    1.}, {0.5, 1., 1.}}, {{0., 0.5, 0.}, {0.5, 1., 0.5}, {0.5,
                     1., 1.}, {0.5, 1., 1.}}, {{0., 0.5, 0.}, {0., 0.5, 0.}, {
                    0.5, 1., 1.}, {0.5, 1., 1.}}}, {{0, 0}, {4, 3}}, {0, 
                    1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 
                    1}}, {{0, 0}, {4, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 3}}, {{1, 0}, {1, 3}}, {{2, 0}, {2, 
                    3}}, {{3, 0}, {3, 3}}, {{4, 0}, {4, 3}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwIe2EPoD/aofGLF0eXRxdHtIdVecs0n1l5qm48u
jttfAL/zLEM=
                    "], {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIAaxIeCBPYT+YI/KJ1YcXR5dHN0eUu0l13xi7aW2
+ejihPxFLfMxxQFIPzL+
                    "], {{0, 0}, {4, 5}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{0, 3}, {4, 
                    3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 5}}, {{1, 0}, {1, 5}}, {{2, 0}, {2, 
                    5}}, {{3, 0}, {3, 5}}, {{4, 0}, {4, 5}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
                Dynamic[$CellContext`i39$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i39$$, \
$CellContext`i39$32488$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 5, 1}, 5, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{437., {241.75, 248.75}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 3.7316840076703186`*^9, 
   3.7316858340245857`*^9, 3.7316894557383833`*^9, 3.731689553869085*^9, 
   3.731689875010829*^9, 3.7316901509024677`*^9, 3.731690668421858*^9, 
   3.73169083498307*^9},ExpressionUUID->"23302469-cc7c-4c17-8c0a-\
e6e394732d5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DibujaDiagramaTemporal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "a", ",", "a", ",", "a", ",", "a"}], "}"}], ",", "AC1", 
   ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.731683972710233*^9, 3.731683986034514*^9}, {
   3.73168401661662*^9, 3.7316840188803144`*^9}, {3.731685789069353*^9, 
   3.7316858005332546`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"31528840-bcd0-45e4-ad23-63f41c0a121c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i40$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i40$$ = 1}, 
     "\"max\"" :> {$CellContext`i40$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i40$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i40$33335$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i40$$], {1, 6, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->2345.6366505622864`,
                  AnimationTimeIndex->3.333333333333158,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0.5, 1., 0.5}, {0.5, 1., 0.5}, {0.5, 1., 
                    0.5}, {0.5, 1., 0.5}, {0.5, 1., 0.5}}}, {{0, 0}, {5, 
                    1}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}, {{5, 0}, {5, 
                    1}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0.5, 1., 0.5}, {0.5, 1., 0.5}, {0.5, 1., 
                    0.5}, {0.5, 1., 0.5}, {0.5, 1., 0.5}}, {{0., 0.5, 0.}, {
                    0.5, 1., 0.5}, {0.5, 1., 0.5}, {0.5, 1., 0.5}, {0.5, 1., 
                    0.5}}}, {{0, 0}, {5, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 2}, {5, 2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}, {{3, 0}, {3, 2}}, {{4, 0}, {4, 2}}, {{5, 0}, {5, 
                    2}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAAYVYoDQEP7CH0B3tUPq3F0e2nl3tw2Us79wAAg4cuMQ==

                    "], {{0, 0}, {5, 3}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 3}, {5, 3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 
                    1}}, {{0, 0}, {5, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 3}}, {{1, 0}, {1, 3}}, {{2, 0}, {2, 
                    3}}, {{3, 0}, {3, 3}}, {{4, 0}, {4, 3}}, {{5, 0}, {5, 
                    3}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIAaxIeCBPYT+YI/Kp7U4uv30cg8ue2ntHlLtpdw9
ANYTOGk=
                    "], {{0, 0}, {5, 4}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 4}, {5, 4}}, {{0, 3}, {5, 3}}, {{0, 2}, {5, 
                    2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}, {{5, 0}, {5, 
                    4}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGwIe2EPoD/aofFqLo9tPL/fgspfW7iHVXmq5h1r2
Eu8eAKXEQFM=
                    "], {{0, 0}, {5, 5}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 5}, {5, 5}}, {{0, 4}, {5, 4}}, {{0, 3}, {5, 
                    3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 5}}, {{1, 0}, {1, 5}}, {{2, 0}, {2, 
                    5}}, {{3, 0}, {3, 5}}, {{4, 0}, {4, 5}}, {{5, 0}, {5, 
                    5}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[9, 2]}, {4.5, 4.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 6->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIAaxIeCBPYT+YI/Kp7U4uv30cg8ue2ntHlLtpZZ7
qGUvqe6htb2Y4gAVS0Xv
                    "], {{0, 0}, {5, 6}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 6}, {5, 6}}, {{0, 5}, {5, 5}}, {{0, 4}, {5, 
                    4}}, {{0, 3}, {5, 3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 
                    1}}, {{0, 0}, {5, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 6}}, {{1, 0}, {1, 6}}, {{2, 0}, {2, 
                    6}}, {{3, 0}, {3, 6}}, {{4, 0}, {4, 6}}, {{5, 0}, {5, 
                    6}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[11, 2]}, {0.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[11, 2]}, {1.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[11, 2]}, {2.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[11, 2]}, {3.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[9, 2]}, {4.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[11, 2]}, {4.5, 5.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}, {5.5, 
                    FormBox["6", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}, {5.5, 
                    FormBox["6", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0., 0.5, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
                Dynamic[$CellContext`i40$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i40$$, \
$CellContext`i40$33335$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 6, 1}, 6, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{437., {241.75, 248.75}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 3.7316840199193935`*^9, 
   3.7316858397726793`*^9, 3.731689598366254*^9, 3.731690679868219*^9, 
   3.7316908406081123`*^9},ExpressionUUID->"3aeece00-cfa2-41e7-85e9-\
9aa76998aa0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DibujaDiagramaTemporal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a", ",", "a", ",", "b"}], "}"}], ",", "AC2", 
   ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, 3.7316858044590693`*^9},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"bde2c798-399c-4ec4-aaee-0e5de0342785"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i41$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i41$$ = 1}, 
     "\"max\"" :> {$CellContext`i41$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i41$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i41$34343$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i41$$], {1, 6, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->2132.4012961387634`,
                  AnimationTimeIndex->4.166666666666667,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.}, {0., 0.5, 0.5}}}, {{0, 0}, {5, 1}}, {
                    0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}, {{5, 0}, {5, 
                    1}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.}, {0., 0.5, 0.5}}, {{0.5, 0.5, 0.5}, {
                    0., 0.5, 0.5}, {0., 0.5, 0.}, {0., 0.5, 0.}, {0., 0.5, 
                    0.5}}}, {{0, 0}, {5, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 2}, {5, 2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}, {{3, 0}, {3, 2}}, {{4, 0}, {4, 2}}, {{5, 0}, {5, 
                    2}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAAYVYojQoe2GMIoYijyxNST8gcXPRA2QujP1DdXgCv0R7u

                    "], {{0, 0}, {5, 3}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 3}, {5, 3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 
                    1}}, {{0, 0}, {5, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 3}}, {{1, 0}, {1, 3}}, {{2, 0}, {2, 
                    3}}, {{3, 0}, {3, 3}}, {{4, 0}, {4, 3}}, {{5, 0}, {5, 
                    3}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIAaxUcEDewwhFHF0eULqCZmDix4oe2H0h0FiL7Hh
g9teAKN3LHM=
                    "], {{0, 0}, {5, 4}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 4}, {5, 4}}, {{0, 3}, {5, 3}}, {{0, 2}, {5, 
                    2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}, {{5, 0}, {5, 
                    4}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGxU8sMcQQhFHlyeknpA5uOiBshdGfxgk9hIbPvSy
F139BxzueWAPAD3UPFY=
                    "], {{0, 0}, {5, 5}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 5}, {5, 5}}, {{0, 4}, {5, 4}}, {{0, 3}, {5, 
                    3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 5}}, {{1, 0}, {1, 5}}, {{2, 0}, {2, 
                    5}}, {{3, 0}, {3, 5}}, {{4, 0}, {4, 5}}, {{5, 0}, {5, 
                    5}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "r", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[9, 2]}, {4.5, 4.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 6->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIAaxUcEDewwhFHF0eULqCZmDix4oe2H0h0FiL7Hh
Qy970dV/wOEeetmLKQ4AYClNeA==
                    "], {{0, 0}, {5, 6}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 6}, {5, 6}}, {{0, 5}, {5, 5}}, {{0, 4}, {5, 
                    4}}, {{0, 3}, {5, 3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 
                    1}}, {{0, 0}, {5, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 6}}, {{1, 0}, {1, 6}}, {{2, 0}, {2, 
                    6}}, {{3, 0}, {3, 6}}, {{4, 0}, {4, 6}}, {{5, 0}, {5, 
                    6}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[11, 2]}, {0.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[11, 2]}, {1.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[11, 2]}, {2.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "r", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "r", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[11, 2]}, {3.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[9, 2]}, {4.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "r", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[11, 2]}, {4.5, 5.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}, {5.5, 
                    FormBox["6", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}, {5.5, 
                    FormBox["6", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
                Dynamic[$CellContext`i41$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i41$$, \
$CellContext`i41$34343$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 6, 1}, 6, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{437., {241.75, 248.75}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 3.731685844270731*^9, 
   3.731689618775551*^9, 3.7316906873018026`*^9, 
   3.7316908463112364`*^9},ExpressionUUID->"e926b67d-fa4a-4358-b141-\
f4bf2aea6bfd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DibujaDiagramaTemporal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "a", ",", "b"}], "}"}], ",", "AC2", ",", 
   "q"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.7316839224590883`*^9, 3.7316839230508347`*^9}, 
   3.7316858083907304`*^9},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"b2182f21-c285-4418-9562-a67f5ceac530"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i42$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i42$$ = 1}, 
     "\"max\"" :> {$CellContext`i42$$ = 5}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i42$$], 1, ""}, 1, 5, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i42$35388$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i42$$], {1, 5, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->29.478590965270996`,
                  AnimationTimeIndex->4.478590965270996,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.5}}}, {{0, 0}, {4, 1}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.5}}, {{0.5, 0.5, 0.5}, {0., 0.5, 0.5}, {
                    0., 0.5, 0.}, {0., 0.5, 0.5}}}, {{0, 0}, {4, 2}}, {0, 
                    1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}, {{3, 0}, {3, 2}}, {{4, 0}, {4, 2}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.5}}, {{0.5, 0.5, 0.5}, {0., 0.5, 0.5}, {
                    0., 0.5, 0.}, {0., 0.5, 0.5}}, {{0.5, 0.5, 0.5}, {0.5, 1.,
                     0.5}, {0., 0.5, 0.}, {0., 0.5, 0.5}}}, {{0, 0}, {4, 
                    3}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 
                    1}}, {{0, 0}, {4, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 3}}, {{1, 0}, {1, 3}}, {{2, 0}, {2, 
                    3}}, {{3, 0}, {3, 3}}, {{4, 0}, {4, 3}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGxU8sMcQQhFHlydWPS6a1ubD6A90Np94/wIA+Ccn
9g==
                    "], {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIAaxUcEDewwhFHF0eWLV46JpbT6M/kBn80n1L7XM
x1QPAGOFNYs=
                    "], {{0, 0}, {4, 5}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{0, 3}, {4, 
                    3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 5}}, {{1, 0}, {1, 5}}, {{2, 0}, {2, 
                    5}}, {{3, 0}, {3, 5}}, {{4, 0}, {4, 5}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "a", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "p", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "q", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "b"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "p"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "q"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "r"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5], 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 
                    NCache[
                    Rational[1, 2], 0.5]]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 2], 0.5], 1, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.3333333333333333, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 0], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.3333333333333333, 0.3333333333333333], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1/2, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.3333333333333333, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1/2, 1/2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 
                    Rational[1, 2], 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.3333333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1/2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 
                    Rational[1, 2]], Editable -> False, Selectable -> False], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 2], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3333333333333333, 0.6666666666666666, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1/2, 1, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 2], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 2], 1, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
                Dynamic[$CellContext`i42$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i42$$, \
$CellContext`i42$35388$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 5, 1}, 5, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{437., {241.75, 248.75}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 3.7316839268301716`*^9, 
   3.7316858494269953`*^9, 3.731689623072409*^9, 3.7316906918340597`*^9, 
   3.731690850811247*^9},ExpressionUUID->"38ef4de6-4026-4890-b7f1-\
f382900fd882"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DibujaDiagramaTemporal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "AC3", 
   ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.7316839493888626`*^9, 
   3.7316839495128484`*^9}, {3.731684033423338*^9, 3.73168405797029*^9}, 
   3.731685815005987*^9},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"4f84ebfa-ab28-4377-bd9f-c86dcae82bec"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i43$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i43$$ = 1}, 
     "\"max\"" :> {$CellContext`i43$$ = 6}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i43$$], 1, ""}, 1, 6, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i43$36327$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i43$$], {1, 6, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->133.34433889389038`,
                  AnimationTimeIndex->4.458354314168325,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.}, {0., 0.5, 0.5}}}, {{0, 0}, {5, 1}}, {
                    0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}, {{5, 0}, {5, 
                    1}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.}, {0., 0.5, 0.5}, {0., 0.5, 
                    0.}, {0., 0.5, 0.}, {0., 0.5, 0.5}}, {{0.5, 1., 0.5}, {0.,
                     0.5, 0.5}, {0., 0.5, 0.}, {0., 0.5, 0.}, {0., 0.5, 
                    0.5}}}, {{0, 0}, {5, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 2}, {5, 2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}, {{3, 0}, {3, 2}}, {{4, 0}, {4, 2}}, {{5, 0}, {5, 
                    2}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAAYVYojQoe2GMIoYijyxNST8gcGP2BgPn0spdY95BuLwDE
kR8O
                    "], {{0, 0}, {5, 3}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 3}, {5, 3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 
                    1}}, {{0, 0}, {5, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 3}}, {{1, 0}, {1, 3}}, {{2, 0}, {2, 
                    3}}, {{3, 0}, {3, 3}}, {{4, 0}, {4, 3}}, {{5, 0}, {5, 
                    3}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgAWJWIAaxUcEDewwhFHF0eULqCZkDoz8QMJ9e9hLrHnrZ
S6l7HtgDANF3LLM=
                    "], {{0, 0}, {5, 4}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 4}, {5, 4}}, {{0, 3}, {5, 3}}, {{0, 2}, {5, 
                    2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}, {{5, 0}, {5, 
                    4}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBghWIQGxU8sMcQQhFHlyeknpA5MPoDAfPpZS+x7qGXvZS6
h9r2Eh9fAJJ0PKY=
                    "], {{0, 0}, {5, 5}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 5}, {5, 5}}, {{0, 4}, {5, 4}}, {{0, 3}, {5, 
                    3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 1}}, {{0, 0}, {5, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 5}}, {{1, 0}, {1, 5}}, {{2, 0}, {2, 
                    5}}, {{3, 0}, {3, 5}}, {{4, 0}, {4, 5}}, {{5, 0}, {5, 
                    5}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[9, 2]}, {4.5, 4.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 6->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgA2JWIAaxUcEDewwhFHF0eULqCZkDoz8QMJ9e9hLrHnrZ
S6l7qG0vqfFFa3sxxQHiyU3I
                    "], {{0, 0}, {5, 6}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 6}, {5, 6}}, {{0, 5}, {5, 5}}, {{0, 4}, {5, 
                    4}}, {{0, 3}, {5, 3}}, {{0, 2}, {5, 2}}, {{0, 1}, {5, 
                    1}}, {{0, 0}, {5, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 6}}, {{1, 0}, {1, 6}}, {{2, 0}, {2, 
                    6}}, {{3, 0}, {3, 6}}, {{4, 0}, {4, 6}}, {{5, 0}, {5, 
                    6}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[11, 2]}, {0.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[11, 2]}, {1.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[11, 2]}, {2.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[11, 2]}, {3.5, 5.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[1, 2]}, {4.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[3, 2]}, {4.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[5, 2]}, {4.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[7, 2]}, {4.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[9, 2]}, {4.5, 4.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "b", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[9, 2], 
                    Rational[11, 2]}, {4.5, 5.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}, {5.5, 
                    FormBox["6", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}, {5.5, 
                    FormBox["6", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]
                    ], BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
                Dynamic[$CellContext`i43$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i43$$, \
$CellContext`i43$36327$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 6, 1}, 6, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{436., {241.75, 248.75}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 3.731684076900033*^9, 
   3.731685853365473*^9, 3.731689627228698*^9, 3.7316906955098476`*^9, 
   3.731690855405037*^9},ExpressionUUID->"850da8bb-ab72-4724-9696-\
726901b7c22f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DibujaDiagramaTemporal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", "AC3", ",", 
   "a"}], "]"}]], "Input",
 CellChangeTimes->{
  3.728976127746084*^9, {3.728976698171008*^9, 3.7289767049365935`*^9}, {
   3.731683682437605*^9, 3.731683738083353*^9}, {3.731683842922621*^9, 
   3.7316838443210526`*^9}, {3.731683951846874*^9, 3.7316839519289417`*^9}, {
   3.7316840370083256`*^9, 3.7316840374184866`*^9}, {3.7316840701793303`*^9, 
   3.731684073033864*^9}, 3.731685819498228*^9},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"cd22cf9c-6e1d-488c-99f1-563f6654629d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i44$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i44$$ = 1}, 
     "\"max\"" :> {$CellContext`i44$$ = 5}}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"sin t\[IAcute]tulo\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i44$$], 1, ""}, 1, 5, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i44$37204$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i44$$], {1, 5, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->127.82855319976807`,
                  AnimationTimeIndex->2.8285531997680664`,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.5}, {0., 0.5, 0.}, {0., 0.5, 
                    0.5}, {0., 0.5, 0.}}}, {{0, 0}, {4, 1}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    LineBox[{{{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 1}}, {{1, 0}, {1, 1}}, {{2, 0}, {2, 
                    1}}, {{3, 0}, {3, 1}}, {{4, 0}, {4, 1}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.5}, {0., 0.5, 0.}, {0., 0.5, 
                    0.5}, {0., 0.5, 0.}}, {{0.5, 1., 1.}, {0., 0.5, 0.}, {0., 
                    0.5, 0.5}, {0., 0.5, 0.}}}, {{0, 0}, {4, 2}}, {0, 1}], {{
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 2}}, {{1, 0}, {1, 2}}, {{2, 0}, {2, 
                    2}}, {{3, 0}, {3, 2}}, {{4, 0}, {4, 2}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
                TemplateBox[{GraphicsBox[{
                    
                    RasterBox[{{{0., 0.5, 0.5}, {0., 0.5, 0.}, {0., 0.5, 
                    0.5}, {0., 0.5, 0.}}, {{0.5, 1., 1.}, {0., 0.5, 0.}, {0., 
                    0.5, 0.5}, {0., 0.5, 0.}}, {{0.5, 1., 1.}, {1., 1., 1.}, {
                    0., 0.5, 0.5}, {0., 0.5, 0.}}}, {{0, 0}, {4, 3}}, {0, 
                    1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 
                    1}}, {{0, 0}, {4, 0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 3}}, {{1, 0}, {1, 3}}, {{2, 0}, {2, 
                    3}}, {{3, 0}, {3, 3}}, {{4, 0}, {4, 3}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGxU8sEel0cXJVQ/jf0CjaW0+LprW5hNrLwMDALTZ
Jog=
                    "], {{0, 0}, {4, 4}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 
                    2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 0}}}]}, {
                    Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 
                    4}}, {{3, 0}, {3, 4}}, {{4, 0}, {4, 4}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
                TemplateBox[{GraphicsBox[{
                    RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIAaxUcEDe1QaXZxc9TD+BzSa1ubjomltPrH2Utt8
TBoAr4g0rQ==
                    "], {{0, 0}, {4, 5}}, {0, 1}], {{Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 5}, {4, 5}}, {{0, 4}, {4, 4}}, {{0, 3}, {4, 
                    3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0, 0}, {4, 
                    0}}}]}, {Antialiasing -> False, 
                    GrayLevel[
                    NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                    
                    LineBox[{{{0, 0}, {0, 5}}, {{1, 0}, {1, 5}}, {{2, 0}, {2, 
                    5}}, {{3, 0}, {3, 5}}, {{4, 0}, {4, 5}}}]}}}, Epilog -> {{
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[1, 2]}, {0.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[3, 2]}, {0.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[5, 2]}, {0.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[7, 2]}, {0.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "c", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[1, 2], 
                    Rational[9, 2]}, {0.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[1, 2]}, {1.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[3, 2]}, {1.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[5, 2]}, {1.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[7, 2]}, {1.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[3, 2], 
                    Rational[9, 2]}, {1.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[1, 2]}, {2.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[3, 2]}, {2.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "1", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[5, 2]}, {2.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[7, 2]}, {2.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[5, 2], 
                    Rational[9, 2]}, {2.5, 4.5}]]}, {
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[1, 2]}, {3.5, 0.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[3, 2]}, {3.5, 1.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[5, 2]}, {3.5, 2.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "0", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]], 
                    InsetBox[
                    FormBox[
                    FrameBox[
                    "d", Background -> RGBColor[0, 1, 0], StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[9, 2]}, {3.5, 4.5}]]}}, Frame -> True, 
                   FrameLabel -> {None, None}, FrameTicks -> {{{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}, {4.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}, {{0.5, 
                    FormBox["1", TraditionalForm]}, {1.5, 
                    FormBox["2", TraditionalForm]}, {2.5, 
                    FormBox["3", TraditionalForm]}, {3.5, 
                    FormBox["4", TraditionalForm]}}}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                    Automatic}],FormBox[
                   FormBox[
                    TemplateBox[{
                    TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"], 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, 
                    "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0., 0.33333333333333337`, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.5, 0.5], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                   TraditionalForm]},
                 "Legended",
                 DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, GridBoxItemSize -> Automatic, 
                   BaselinePosition -> {1, 1}]& ),
                 Editable->True,
                 InterpretationFunction->(RowBox[{"Legended", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
                Dynamic[$CellContext`i44$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->All,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i44$$, \
$CellContext`i44$37204$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 5, 1}, 5, 1.]}], 
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{436., {241.75, 248.75}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7289761631212068`*^9, 3.728976707936572*^9, {3.73168371739183*^9, 
   3.7316837422123117`*^9}, 3.7316838470925617`*^9, 3.731684074093429*^9, 
   3.7316858569358225`*^9, 3.7316896309474726`*^9, 3.7316907020967937`*^9, 
   3.7316908592332506`*^9},ExpressionUUID->"b3e58efe-14ad-4dfd-bec0-\
dc8f2fd0fab8"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7316868777195625`*^9, 3.7316868834519844`*^9}, 
   3.7316909284366035`*^9},ExpressionUUID->"23b297fb-f457-4010-bdca-\
5a2cefb45217"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 para Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 433, 8, 58, "Input",ExpressionUUID->"9f2e2e60-3d99-4211-8b16-c8cc2e0b1ce4"],
Cell[994, 30, 201, 2, 53, "Program",ExpressionUUID->"f812a491-4d34-42e8-a05a-a5c51c521ef2"],
Cell[CellGroupData[{
Cell[1220, 36, 234, 4, 67, "Section",ExpressionUUID->"2656c1e8-80aa-407f-aebf-29fb9a6a514a"],
Cell[1457, 42, 1857, 49, 194, "Input",ExpressionUUID->"0ec99ef2-a232-4bcf-adfe-263b57e5a570"],
Cell[CellGroupData[{
Cell[3339, 95, 164, 3, 53, "Subsection",ExpressionUUID->"f088d13f-c882-423a-a99a-f2cda7f98ba4"],
Cell[3506, 100, 45145, 784, 603, "Input",ExpressionUUID->"7ec7acf2-80d0-4274-adde-0cddc5b78539"],
Cell[CellGroupData[{
Cell[48676, 888, 389, 6, 44, "Input",ExpressionUUID->"72dc5a55-6efb-4c2d-a580-a2ec98f7a42f"],
Cell[49068, 896, 1706, 48, 52, "Output",ExpressionUUID->"d18712fc-4314-4e82-a868-70098657309c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50811, 949, 283, 5, 44, "Input",ExpressionUUID->"51077764-943d-4371-afd2-319a57381dfb"],
Cell[51097, 956, 1706, 48, 52, "Output",ExpressionUUID->"34d1b13c-bd29-4930-97df-6c901b4d7412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52840, 1009, 287, 5, 44, "Input",ExpressionUUID->"5aa38c19-a834-42eb-8a39-c05a93001608"],
Cell[53130, 1016, 2377, 67, 52, "Output",ExpressionUUID->"8468590e-435a-4b5b-965d-3e356f3dd231"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55568, 1090, 158, 3, 67, "Section",ExpressionUUID->"406273de-e0aa-4276-bc3a-bf347acc25a2"],
Cell[55729, 1095, 2337, 61, 268, "Input",ExpressionUUID->"ff61b0f8-cf75-4e05-b00c-4e84952c7513"],
Cell[CellGroupData[{
Cell[58091, 1160, 162, 3, 53, "Subsection",ExpressionUUID->"0ce1949b-44a0-429f-91db-178bfc1f9323"],
Cell[58256, 1165, 605, 13, 83, "Input",ExpressionUUID->"e779cd73-11f7-4905-b8b1-3b7a6d87ac8e"],
Cell[CellGroupData[{
Cell[58886, 1182, 518, 11, 44, "Input",ExpressionUUID->"dedcd6f5-2b67-4d7a-b8ae-76e5d47126fd"],
Cell[59407, 1195, 282, 5, 32, "Output",ExpressionUUID->"a669e457-db9d-4ffd-90fb-bb137567cc14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59726, 1205, 577, 12, 44, "Input",ExpressionUUID->"65e5841b-e51e-43df-a915-04f9860131cb"],
Cell[60306, 1219, 261, 5, 32, "Output",ExpressionUUID->"6d9ff3be-0a8f-441c-80ea-d1c440c9f906"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60604, 1229, 480, 11, 44, "Input",ExpressionUUID->"1d591641-5f6d-46e8-a7a5-eaddcad3570a"],
Cell[61087, 1242, 258, 5, 32, "Output",ExpressionUUID->"95611eca-4b01-4fda-8454-500947573f9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61382, 1252, 520, 11, 44, "Input",ExpressionUUID->"45e77171-3664-40cf-93bf-747687a2072b"],
Cell[61905, 1265, 261, 5, 32, "Output",ExpressionUUID->"d8f64e79-b756-4fd8-a99f-9c0c18c5dee1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62203, 1275, 579, 12, 44, "Input",ExpressionUUID->"307b2644-fe98-447b-9e98-19825f81fb5e"],
Cell[62785, 1289, 258, 5, 32, "Output",ExpressionUUID->"24e87484-2a1e-479f-86b3-5f3322f46340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63080, 1299, 624, 13, 44, "Input",ExpressionUUID->"a90e4e1f-1e7e-4fb8-993a-e2848d0fd8d0"],
Cell[63707, 1314, 259, 5, 32, "Output",ExpressionUUID->"d06edaf0-a867-4f2b-9b8c-79bff019653c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64027, 1326, 160, 3, 67, "Section",ExpressionUUID->"25965ef5-a75b-44fe-b275-338308a84af5"],
Cell[64190, 1331, 2780, 70, 252, "Input",ExpressionUUID->"fdcdc381-f0b2-4935-908b-cd7e5b4e9364"],
Cell[CellGroupData[{
Cell[66995, 1405, 164, 3, 53, "Subsection",ExpressionUUID->"6974fe81-7a97-4561-8d05-a9d92f83c72d"],
Cell[CellGroupData[{
Cell[67184, 1412, 1429, 34, 64, "Input",ExpressionUUID->"69d28875-8796-4e00-8d0a-26b4d381abd4"],
Cell[68616, 1448, 5020, 120, 109, "Output",ExpressionUUID->"533aedc6-3aea-4d0b-94f7-0a92ba43abbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73673, 1573, 366, 7, 44, "Input",ExpressionUUID->"a28e9503-a147-43ad-b1c5-0d3fdf1e6775"],
Cell[74042, 1582, 4840, 117, 109, "Output",ExpressionUUID->"46405c08-358d-40a1-9e43-63594f5d1a65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78919, 1704, 364, 7, 44, "Input",ExpressionUUID->"5f4138e7-6fe1-4f9b-a7bd-682dd7915f58"],
Cell[79286, 1713, 9034, 220, 185, "Output",ExpressionUUID->"60d063d8-faa0-4fa2-a7b6-5792db8d2432"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88381, 1940, 158, 3, 67, "Section",ExpressionUUID->"ef9a3fd2-7d2d-4317-8995-5b76c058c7dc"],
Cell[88542, 1945, 6108, 137, 679, "Input",ExpressionUUID->"cddbb836-d379-4dd3-be42-354cba97f843"],
Cell[CellGroupData[{
Cell[94675, 2086, 181, 3, 53, "Subsection",ExpressionUUID->"28d2520c-0d9a-43cb-b689-1fbbfa265fee"],
Cell[94859, 2091, 2105, 53, 361, "Input",ExpressionUUID->"3766d985-8687-409f-89c0-04949b0cc6b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97001, 2149, 164, 3, 53, "Subsection",ExpressionUUID->"1d0dfe63-0352-48b5-9c60-45a62757d856"],
Cell[CellGroupData[{
Cell[97190, 2156, 434, 10, 44, "Input",ExpressionUUID->"233c5968-68b7-4f0e-91e2-0472719f4aec"],
Cell[97627, 2168, 165135, 3418, 528, "Output",ExpressionUUID->"0e5d46a2-5992-402d-a7c4-7b557e197a1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262799, 5591, 575, 12, 44, "Input",ExpressionUUID->"b46edfbf-5339-4afe-9838-cd2a7be6806a"],
Cell[263377, 5605, 82656, 1706, 528, "Output",ExpressionUUID->"23302469-cc7c-4c17-8c0a-e6e394732d5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346070, 7316, 636, 13, 44, "Input",ExpressionUUID->"31528840-bcd0-45e4-ad23-63f41c0a121c"],
Cell[346709, 7331, 100616, 2124, 528, "Output",ExpressionUUID->"3aeece00-cfa2-41e7-85e9-9aa76998aa0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447362, 9460, 511, 11, 44, "Input",ExpressionUUID->"bde2c798-399c-4ec4-aaee-0e5de0342785"],
Cell[447876, 9473, 164841, 3414, 528, "Output",ExpressionUUID->"e926b67d-fa4a-4358-b141-f4bf2aea6bfd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612754, 12892, 555, 12, 44, "Input",ExpressionUUID->"b2182f21-c285-4418-9562-a67f5ceac530"],
Cell[613312, 12906, 128162, 2627, 528, "Output",ExpressionUUID->"38ef4de6-4026-4890-b7f1-f382900fd882"]
}, Open  ]],
Cell[CellGroupData[{
Cell[741511, 15538, 612, 13, 44, "Input",ExpressionUUID->"ab6c499b-3718-4bb0-89d4-1b813f8d4d6f"],
Cell[742126, 15553, 105127, 2195, 528, "Output",ExpressionUUID->"6bb147bf-b072-437a-a36d-5985aa1172c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[847290, 17753, 653, 13, 44, "Input",ExpressionUUID->"697a7b69-bbaf-4bb4-ac98-ff2aafc1ca0c"],
Cell[847946, 17768, 78396, 1612, 528, "Output",ExpressionUUID->"bbc8769a-927b-4f70-bc16-8aa269310149"]
}, Open  ]],
Cell[926357, 19383, 181, 3, 28, "Input",ExpressionUUID->"31715cc4-b122-4727-918d-2138a9b9cdc9"]
}, Open  ]]
}, Open  ]]
}
]
*)

